"use strict";
(self["webpackChunkaurum_org"] = self["webpackChunkaurum_org"] || []).push([["vendors-node_modules_aurum-canvas_prebuilt_esnext_aurum-canvas_js"],{

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/aurum-canvas.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/aurum-canvas.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AurumCanvas": () => (/* reexport safe */ _components_canvas_js__WEBPACK_IMPORTED_MODULE_0__.AurumCanvas),
/* harmony export */   "AurumElipse": () => (/* reexport safe */ _components_drawables_aurum_elipse_js__WEBPACK_IMPORTED_MODULE_4__.AurumElipse),
/* harmony export */   "AurumGroup": () => (/* reexport safe */ _components_drawables_aurum_group_js__WEBPACK_IMPORTED_MODULE_5__.AurumGroup),
/* harmony export */   "AurumImage": () => (/* reexport safe */ _components_drawables_aurum_image_js__WEBPACK_IMPORTED_MODULE_8__.AurumImage),
/* harmony export */   "AurumLine": () => (/* reexport safe */ _components_drawables_aurum_line_js__WEBPACK_IMPORTED_MODULE_3__.AurumLine),
/* harmony export */   "AurumPath": () => (/* reexport safe */ _components_drawables_aurum_path_js__WEBPACK_IMPORTED_MODULE_6__.AurumPath),
/* harmony export */   "AurumRectangle": () => (/* reexport safe */ _components_drawables_aurum_rectangle_js__WEBPACK_IMPORTED_MODULE_1__.AurumRectangle),
/* harmony export */   "AurumRegularPolygon": () => (/* reexport safe */ _components_drawables_aurum_regular_polygon_js__WEBPACK_IMPORTED_MODULE_9__.AurumRegularPolygon),
/* harmony export */   "AurumText": () => (/* reexport safe */ _components_drawables_aurum_text_js__WEBPACK_IMPORTED_MODULE_2__.AurumText),
/* harmony export */   "State": () => (/* reexport safe */ _components_drawables_state_js__WEBPACK_IMPORTED_MODULE_7__.State),
/* harmony export */   "stateSymbol": () => (/* reexport safe */ _components_drawables_state_js__WEBPACK_IMPORTED_MODULE_7__.stateSymbol)
/* harmony export */ });
/* harmony import */ var _components_canvas_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/canvas.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/canvas.js");
/* harmony import */ var _components_drawables_aurum_rectangle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/drawables/aurum_rectangle.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_rectangle.js");
/* harmony import */ var _components_drawables_aurum_text_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/drawables/aurum_text.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_text.js");
/* harmony import */ var _components_drawables_aurum_line_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/drawables/aurum_line.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_line.js");
/* harmony import */ var _components_drawables_aurum_elipse_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/drawables/aurum_elipse.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_elipse.js");
/* harmony import */ var _components_drawables_aurum_group_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/drawables/aurum_group.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_group.js");
/* harmony import */ var _components_drawables_aurum_path_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/drawables/aurum_path.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_path.js");
/* harmony import */ var _components_drawables_state_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/drawables/state.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/state.js");
/* harmony import */ var _components_drawables_aurum_image_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/drawables/aurum_image.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_image.js");
/* harmony import */ var _components_drawables_aurum_regular_polygon_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/drawables/aurum_regular_polygon.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_regular_polygon.js");










//# sourceMappingURL=aurum-canvas.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/canvas.js":
/*!************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/canvas.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AurumCanvas": () => (/* binding */ AurumCanvas)
/* harmony export */ });
/* harmony import */ var aurumjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurumjs */ "./node_modules/aurumjs/prebuilt/esnext/aurumjs.js");
/* harmony import */ var _component_model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./component_model.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/component_model.js");
/* harmony import */ var _drawables_state_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./drawables/state.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/state.js");
/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utilities.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/utilities.js");
/* harmony import */ var _rendering_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rendering.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/rendering.js");
/* harmony import */ var _features_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./features.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/features.js");






const renderCache = new WeakMap();
function AurumCanvas(props, children, api) {
    const lc = (0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.createLifeCycle)();
    api.synchronizeLifeCycle(lc);
    const components = api.prerender(children, lc);
    let pendingRerender;
    const cancellationToken = new aurumjs__WEBPACK_IMPORTED_MODULE_0__.CancellationToken();
    let onMouseMove = new aurumjs__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    let onMouseUp = new aurumjs__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    let onMouseDown = new aurumjs__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    return (aurumjs__WEBPACK_IMPORTED_MODULE_0__.Aurum.factory("canvas", { onAttach: (canvas) => {
            if (props.features) {
                if (!props.scale) {
                    props.scale = new aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource({ x: 1, y: 1 });
                }
                if (!props.translate) {
                    props.translate = new aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource({ x: 0, y: 0 });
                }
                if (props.features.mouseWheelZoom) {
                    (0,_features_js__WEBPACK_IMPORTED_MODULE_5__.initializeZoomFeature)(props, canvas);
                }
                if (props.features.panning?.mouse) {
                    (0,_features_js__WEBPACK_IMPORTED_MODULE_5__.initializeMousePanningFeature)(props, canvas);
                }
                if (props.features.panning?.keyboard) {
                    (0,_features_js__WEBPACK_IMPORTED_MODULE_5__.initializeKeyboardPanningFeature)(props, canvas);
                }
            }
            if (props.width instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource) {
                props.width.listen(() => {
                    invalidate(canvas);
                }, api.cancellationToken);
            }
            if (props.backgroundColor instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource) {
                props.backgroundColor.listen(() => {
                    invalidate(canvas);
                }, api.cancellationToken);
            }
            if (props.height instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource) {
                props.height.listen(() => {
                    invalidate(canvas);
                }, api.cancellationToken);
            }
            bindCanvas(canvas, components, cancellationToken);
            render(canvas, components);
            if (props.translate) {
                props.translate.transform((0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.dsUnique)(), api.cancellationToken).listen((v) => {
                    invalidate(canvas);
                });
            }
            if (props.scale) {
                props.scale.transform((0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.dsUnique)(), api.cancellationToken).listen((v) => {
                    invalidate(canvas);
                });
            }
            props.onAttach?.(canvas);
        }, onDetach: () => {
            cancellationToken.cancel();
            props.onDetach?.();
        }, style: props.style, class: props.class, width: typeof props.width !== 'object' ? props.width?.toString() : props.width.transform((0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.dsMap)((v) => v.toString())), height: typeof props.height !== 'object' ? props.height?.toString() : props.height.transform((0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.dsMap)((v) => v.toString())) }));
    function bindCanvas(canvas, components, cancellationToken) {
        cancellationToken.registerDomEvent(canvas, 'mouseleave', (e) => {
            onMouseMove.fire(e);
        });
        cancellationToken.registerDomEvent(canvas, 'mousemove', (e) => {
            onMouseMove.fire(e);
        });
        cancellationToken.registerDomEvent(canvas, 'mousedown', (e) => {
            onMouseDown.fire(e);
        });
        cancellationToken.registerDomEvent(canvas, 'mouseup', (e) => {
            onMouseUp.fire(e);
        });
        bind(canvas, components, undefined, cancellationToken);
    }
    function isOnTopOf(e, target, context) {
        if (!target.renderedState) {
            return false;
        }
        let x = e.offsetX - (props.translate?.value.x ? props.translate?.value.x * (props.scale?.value?.x ?? 1) : 0);
        let y = e.offsetY - (props.translate?.value.y ? props.translate?.value.y * (props.scale?.value?.x ?? 1) : 0);
        if (props.scale) {
            x /= props.scale.value.x;
            y /= props.scale.value.y;
        }
        if (target.type === _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.TEXT) {
            const label = target;
            const size = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_3__.deref)(label.fontSize) ?? 16;
            if (!label.textBaseline) {
                y += size;
            }
            else {
                switch (label.textBaseline) {
                    case 'bottom':
                        y += size;
                        break;
                    case 'middle':
                        y += size / 2;
                        break;
                    case 'alphabetic':
                        y += size;
                        break;
                }
            }
        }
        switch (target.type) {
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.IMAGE:
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.RECTANGLE:
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.TEXT:
                return (x >= target.renderedState.x &&
                    y >= target.renderedState.y &&
                    x <= target.renderedState.x + target.renderedState.width * (props.scale?.value.x ?? 1) &&
                    y <= target.renderedState.y + target.renderedState.height * (props.scale?.value.y ?? 1));
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.ELIPSE:
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.REGULAR_POLYGON:
                if (!target.renderedState.path) {
                    return false;
                }
                else {
                    return context.isPointInPath(target.renderedState.path, x, y);
                }
            default:
                if (!target.renderedState.path) {
                    return false;
                }
                else {
                    return context.isPointInPath(target.renderedState.path, x - target.renderedState.x, y - target.renderedState.y);
                }
        }
    }
    function bind(canvas, children, parent, cancellationToken) {
        for (const child of children) {
            if (child instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.ArrayDataSource) {
                child.listen(() => invalidate(canvas), cancellationToken);
                const tokenMap = new Map();
                child.listenAndRepeat((change) => {
                    switch (change.operation) {
                        case 'add':
                            for (const item of change.items) {
                                tokenMap.set(item, new aurumjs__WEBPACK_IMPORTED_MODULE_0__.CancellationToken());
                                bindDynamicEntity(item, child, tokenMap.get(item));
                            }
                            break;
                        case 'remove':
                            for (const item of change.items) {
                                tokenMap.get(item).cancel();
                                tokenMap.delete(item);
                            }
                            break;
                        case 'replace':
                            tokenMap.get(change.target).cancel();
                            tokenMap.delete(change.target);
                            tokenMap.set(change.items[0], new aurumjs__WEBPACK_IMPORTED_MODULE_0__.CancellationToken());
                            bindDynamicEntity(change.items[0], child, tokenMap.get(change.items[0]));
                            break;
                        case 'swap':
                            break;
                        case 'merge':
                            throw new Error('Operation not supported');
                    }
                });
                continue;
            }
            if (child instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource || child instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DuplexDataSource) {
                child.listen(() => invalidate(canvas), cancellationToken);
                let bindToken;
                let value;
                child.listenAndRepeat((newValue) => {
                    if (value !== newValue) {
                        value = newValue;
                        if (bindToken) {
                            bindToken.cancel();
                        }
                        bindToken = new aurumjs__WEBPACK_IMPORTED_MODULE_0__.CancellationToken();
                        bindDynamicEntity(value, child, bindToken);
                    }
                });
                continue;
            }
            if (child[_drawables_state_js__WEBPACK_IMPORTED_MODULE_2__.stateSymbol]) {
                if (!parent) {
                    throw new Error('Cannot use <State> nodes at root level');
                }
                parent.animations.push(child);
                continue;
            }
            if ('onMouseEnter' in child || 'onMouseLeave' in child) {
                let isInside = false;
                onMouseMove.subscribe((e) => {
                    if (isOnTopOf(e, child, canvas.getContext('2d'))) {
                        if (!isInside && child.onMouseEnter) {
                            child.onMouseEnter(e, child);
                        }
                        isInside = true;
                    }
                    else {
                        if (isInside && child.onMouseLeave) {
                            child.onMouseLeave(e, child);
                        }
                        isInside = false;
                    }
                }, cancellationToken);
            }
            for (const key in child) {
                if (key === 'onMouseUp') {
                    onMouseUp.subscribe((e) => {
                        if (isOnTopOf(e, child, canvas.getContext('2d'))) {
                            child.onMouseUp(e, child);
                        }
                    }, cancellationToken);
                    continue;
                }
                if (key === 'onMouseDown') {
                    onMouseUp.subscribe((e) => {
                        if (isOnTopOf(e, child, canvas.getContext('2d'))) {
                            child.onMouseUp(e, child);
                        }
                    }, cancellationToken);
                    continue;
                }
                if (key === 'onMouseClick') {
                    onMouseUp.subscribe((e) => {
                        if (isOnTopOf(e, child, canvas.getContext('2d'))) {
                            child.onMouseClick(e, child);
                        }
                    }, cancellationToken);
                    continue;
                }
                if (child[key] instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource) {
                    let value = child[key].value;
                    let lastState;
                    if (key === 'state') {
                        const value = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_3__.deref)(child[key]);
                        lastState = value;
                        child.animationStates = child.animations.filter((e) => e.id === value);
                        child.animationTime = Date.now();
                    }
                    child[key].listen((newValue) => {
                        if (value !== newValue) {
                            value = newValue;
                            if (key === 'state') {
                                if (lastState !== newValue) {
                                    lastState = newValue;
                                    child.animationStates = child.animations.filter((e) => e.id === newValue);
                                    child.animationTime = Date.now();
                                    invalidate(canvas);
                                }
                            }
                            else {
                                invalidate(canvas);
                            }
                        }
                    }, cancellationToken);
                }
            }
            bind(canvas, child.children, child, cancellationToken);
        }
        function bindDynamicEntity(value, parent, bindToken) {
            const arrayedValue = Array.isArray(value) ? value : [value];
            const lc = (0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.createLifeCycle)();
            const renderResult = [];
            for (const piece of arrayedValue) {
                if (!piece) {
                    continue;
                }
                if (!renderCache.has(piece)) {
                    renderCache.set(piece, api.prerender(piece, lc));
                }
                renderResult.push(renderCache.get(piece));
            }
            bind(canvas, renderResult, parent, bindToken);
            lc.onAttach();
            bindToken.addCancelable(() => lc.onDetach());
            invalidate(canvas);
        }
    }
    function invalidate(canvas) {
        if (!pendingRerender) {
            pendingRerender = requestAnimationFrame(() => {
                pendingRerender = undefined;
                if (canvas.isConnected) {
                    render(canvas, components);
                }
            });
        }
    }
    function render(canvas, components) {
        const context = canvas.getContext('2d');
        if (props.backgroundColor === undefined) {
            context.clearRect(0, 0, canvas.width, canvas.height);
        }
        else {
            context.fillStyle = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_3__.deref)(props.backgroundColor);
            context.fillRect(0, 0, canvas.width, canvas.height);
        }
        applyContextTransformation(context);
        for (const child of components) {
            renderChild(context, child, 0, 0);
        }
        unapplyContextTransformation(context);
    }
    function unapplyContextTransformation(context) {
        if (props.scale || props.translate) {
            context.restore();
        }
    }
    function applyContextTransformation(context) {
        if (props.scale || props.translate) {
            context.save();
            if (props.scale?.value) {
                context.scale(props.scale.value.x, props.scale.value.y);
            }
            if (props.translate?.value) {
                context.translate(props.translate.value.x, props.translate.value.y);
            }
        }
    }
    function renderChild(context, child, offsetX, offsetY) {
        if (child === undefined || child === null) {
            return;
        }
        if (Array.isArray(child)) {
            for (const item of child) {
                renderChild(context, item, offsetX, offsetY);
            }
            return;
        }
        if (child[_drawables_state_js__WEBPACK_IMPORTED_MODULE_2__.stateSymbol]) {
            return;
        }
        if (child[aurumjs__WEBPACK_IMPORTED_MODULE_0__.aurumElementModelIdentitiy]) {
            if (!renderCache.has(child)) {
                throw new Error('illegal state: unrendered aurum element made it into the canvas render phase');
            }
            child = renderCache.get(child);
        }
        if (child instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.ArrayDataSource) {
            for (const node of child.getData()) {
                renderChild(context, node, offsetX, offsetY);
            }
            return;
        }
        if (child instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource || child instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DuplexDataSource) {
            renderChild(context, child.value, offsetX, offsetY);
            return;
        }
        context.save();
        let idle;
        switch (child.type) {
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.PATH:
                idle = (0,_rendering_js__WEBPACK_IMPORTED_MODULE_4__.renderPath)(context, child, offsetX, offsetY);
                break;
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.REGULAR_POLYGON:
                idle = (0,_rendering_js__WEBPACK_IMPORTED_MODULE_4__.renderRegularPolygon)(context, child, offsetX, offsetY);
                break;
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.RECTANGLE:
                idle = (0,_rendering_js__WEBPACK_IMPORTED_MODULE_4__.renderRectangle)(context, child, offsetX, offsetY);
                break;
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.TEXT:
                idle = (0,_rendering_js__WEBPACK_IMPORTED_MODULE_4__.renderText)(context, child, offsetX, offsetY);
                break;
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.LINE:
                idle = (0,_rendering_js__WEBPACK_IMPORTED_MODULE_4__.renderLine)(context, child, offsetX, offsetY);
                break;
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.QUADRATIC_CURVE:
                idle = (0,_rendering_js__WEBPACK_IMPORTED_MODULE_4__.renderQuadraticCurve)(context, child, offsetX, offsetY);
                break;
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.BEZIER_CURVE:
                idle = (0,_rendering_js__WEBPACK_IMPORTED_MODULE_4__.renderBezierCurve)(context, child, offsetX, offsetY);
                break;
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.ELIPSE:
                idle = (0,_rendering_js__WEBPACK_IMPORTED_MODULE_4__.renderElipse)(context, child, offsetX, offsetY);
                break;
            case _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.GROUP:
                idle = true;
                break;
        }
        if (!idle) {
            invalidate(context.canvas);
        }
        for (const subChild of child.children) {
            renderChild(context, subChild, (0,_utilities_js__WEBPACK_IMPORTED_MODULE_3__.deref)(child.x) + offsetX, (0,_utilities_js__WEBPACK_IMPORTED_MODULE_3__.deref)(child.y) + offsetY);
        }
        context.restore();
    }
}
//# sourceMappingURL=canvas.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/component_model.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/component_model.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComponentType": () => (/* binding */ ComponentType)
/* harmony export */ });
var ComponentType;
(function (ComponentType) {
    ComponentType[ComponentType["RECTANGLE"] = 0] = "RECTANGLE";
    ComponentType[ComponentType["ELIPSE"] = 1] = "ELIPSE";
    ComponentType[ComponentType["LINE"] = 2] = "LINE";
    ComponentType[ComponentType["TEXT"] = 3] = "TEXT";
    ComponentType[ComponentType["IMAGE"] = 4] = "IMAGE";
    ComponentType[ComponentType["GROUP"] = 5] = "GROUP";
    ComponentType[ComponentType["STATE"] = 6] = "STATE";
    ComponentType[ComponentType["PATH"] = 7] = "PATH";
    ComponentType[ComponentType["QUADRATIC_CURVE"] = 8] = "QUADRATIC_CURVE";
    ComponentType[ComponentType["BEZIER_CURVE"] = 9] = "BEZIER_CURVE";
    ComponentType[ComponentType["REGULAR_POLYGON"] = 10] = "REGULAR_POLYGON";
})(ComponentType || (ComponentType = {}));
//# sourceMappingURL=component_model.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_elipse.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_elipse.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AurumElipse": () => (/* binding */ AurumElipse)
/* harmony export */ });
/* harmony import */ var aurumjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurumjs */ "./node_modules/aurumjs/prebuilt/esnext/aurumjs.js");
/* harmony import */ var _component_model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component_model.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/component_model.js");


function AurumElipse(props, children, api) {
    const lc = (0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.createLifeCycle)();
    api.synchronizeLifeCycle(lc);
    if (props.onAttach) {
        api.onAttach(() => props.onAttach());
    }
    if (props.onDetach) {
        api.onDetach(() => props.onDetach());
    }
    const components = api.prerender(children, lc).filter((c) => !!c);
    return {
        ...props,
        opacity: props.opacity ?? 1,
        renderedState: undefined,
        children: components,
        animations: [],
        type: _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.ELIPSE
    };
}
//# sourceMappingURL=aurum_elipse.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_group.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_group.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AurumGroup": () => (/* binding */ AurumGroup)
/* harmony export */ });
/* harmony import */ var aurumjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurumjs */ "./node_modules/aurumjs/prebuilt/esnext/aurumjs.js");
/* harmony import */ var _component_model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component_model.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/component_model.js");


function AurumGroup(props, children, api) {
    const lc = (0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.createLifeCycle)();
    api.synchronizeLifeCycle(lc);
    if (props.onAttach) {
        api.onAttach(() => props.onAttach());
    }
    if (props.onDetach) {
        api.onDetach(() => props.onDetach());
    }
    props.x ??= 0;
    props.y ??= 0;
    const components = api.prerender(children, lc).filter((c) => !!c);
    return {
        ...props,
        renderedState: undefined,
        children: components,
        animations: [],
        type: _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.GROUP
    };
}
//# sourceMappingURL=aurum_group.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_image.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_image.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AurumImage": () => (/* binding */ AurumImage)
/* harmony export */ });
/* harmony import */ var aurumjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurumjs */ "./node_modules/aurumjs/prebuilt/esnext/aurumjs.js");
/* harmony import */ var _component_model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component_model.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/component_model.js");


function AurumImage(props, children, api) {
    const lc = (0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.createLifeCycle)();
    api.synchronizeLifeCycle(lc);
    if (props.onAttach) {
        api.onAttach(() => props.onAttach());
    }
    if (props.onDetach) {
        api.onDetach(() => props.onDetach());
    }
    const components = api.prerender(children, lc).filter((c) => !!c);
    return {
        ...props,
        opacity: props.opacity ?? 1,
        renderedState: undefined,
        children: components,
        animations: [],
        type: _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.IMAGE
    };
}
//# sourceMappingURL=aurum_image.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_line.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_line.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AurumLine": () => (/* binding */ AurumLine)
/* harmony export */ });
/* harmony import */ var aurumjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurumjs */ "./node_modules/aurumjs/prebuilt/esnext/aurumjs.js");
/* harmony import */ var _component_model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component_model.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/component_model.js");


function AurumLine(props, children, api) {
    const lc = (0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.createLifeCycle)();
    api.synchronizeLifeCycle(lc);
    if (props.onAttach) {
        api.onAttach(() => props.onAttach());
    }
    if (props.onDetach) {
        api.onDetach(() => props.onDetach());
    }
    const components = api.prerender(children, lc).filter((c) => !!c);
    return {
        ...props,
        opacity: props.opacity ?? 1,
        lineWidth: props.lineWidth ?? 1,
        renderedState: undefined,
        children: components,
        animations: [],
        type: _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.LINE
    };
}
//# sourceMappingURL=aurum_line.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_path.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_path.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AurumPath": () => (/* binding */ AurumPath)
/* harmony export */ });
/* harmony import */ var aurumjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurumjs */ "./node_modules/aurumjs/prebuilt/esnext/aurumjs.js");
/* harmony import */ var _component_model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component_model.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/component_model.js");


function AurumPath(props, children, api) {
    const lc = (0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.createLifeCycle)();
    api.synchronizeLifeCycle(lc);
    if (props.onAttach) {
        api.onAttach(() => props.onAttach());
    }
    if (props.onDetach) {
        api.onDetach(() => props.onDetach());
    }
    const components = api.prerender(children, lc).filter((c) => !!c);
    return {
        ...props,
        opacity: props.opacity ?? 1,
        renderedState: undefined,
        children: components,
        animations: [],
        type: _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.PATH
    };
}
//# sourceMappingURL=aurum_path.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_rectangle.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_rectangle.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AurumRectangle": () => (/* binding */ AurumRectangle)
/* harmony export */ });
/* harmony import */ var aurumjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurumjs */ "./node_modules/aurumjs/prebuilt/esnext/aurumjs.js");
/* harmony import */ var _component_model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component_model.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/component_model.js");


function AurumRectangle(props, children, api) {
    const lc = (0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.createLifeCycle)();
    api.synchronizeLifeCycle(lc);
    if (props.onAttach) {
        api.onAttach(() => props.onAttach());
    }
    if (props.onDetach) {
        api.onDetach(() => props.onDetach());
    }
    const components = api.prerender(children, lc).filter((c) => !!c);
    return {
        ...props,
        opacity: props.opacity ?? 1,
        renderedState: undefined,
        children: components,
        animations: [],
        type: _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.RECTANGLE
    };
}
//# sourceMappingURL=aurum_rectangle.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_regular_polygon.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_regular_polygon.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AurumRegularPolygon": () => (/* binding */ AurumRegularPolygon)
/* harmony export */ });
/* harmony import */ var aurumjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurumjs */ "./node_modules/aurumjs/prebuilt/esnext/aurumjs.js");
/* harmony import */ var _component_model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component_model.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/component_model.js");


function AurumRegularPolygon(props, children, api) {
    const lc = (0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.createLifeCycle)();
    api.synchronizeLifeCycle(lc);
    if (props.onAttach) {
        api.onAttach(() => props.onAttach());
    }
    if (props.onDetach) {
        api.onDetach(() => props.onDetach());
    }
    const components = api.prerender(children, lc).filter((c) => !!c);
    return {
        ...props,
        opacity: props.opacity ?? 1,
        renderedState: undefined,
        children: components,
        animations: [],
        type: _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.REGULAR_POLYGON
    };
}
//# sourceMappingURL=aurum_regular_polygon.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_text.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/aurum_text.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AurumText": () => (/* binding */ AurumText)
/* harmony export */ });
/* harmony import */ var aurumjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurumjs */ "./node_modules/aurumjs/prebuilt/esnext/aurumjs.js");
/* harmony import */ var _component_model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component_model.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/component_model.js");


function AurumText(props, children, api) {
    const lc = (0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.createLifeCycle)();
    api.synchronizeLifeCycle(lc);
    if (props.onAttach) {
        api.onAttach(() => props.onAttach());
    }
    if (props.onDetach) {
        api.onDetach(() => props.onDetach());
    }
    const content = api.prerender(children, lc).filter((c) => !!c);
    const text = new aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource('');
    if (props.font instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource) {
        props.font.listen(() => {
            if (result.renderedState) {
                result.renderedState.lines = [];
            }
        }, api.cancellationToken);
    }
    if (props.fontWeight instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource) {
        props.fontWeight.listen(() => {
            if (result.renderedState) {
                result.renderedState.lines = [];
            }
        }, api.cancellationToken);
    }
    if (props.fontSize instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource) {
        props.fontSize.listen(() => {
            if (result.renderedState) {
                result.renderedState.lines = [];
            }
        }, api.cancellationToken);
    }
    if (props.width instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource) {
        props.width.listen(() => {
            if (result.renderedState) {
                result.renderedState.lines = [];
            }
        }, api.cancellationToken);
    }
    if (props.wrapWidth instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource) {
        props.wrapWidth.listen(() => {
            if (result.renderedState) {
                result.renderedState.lines = [];
            }
        }, api.cancellationToken);
    }
    for (const i of content) {
        if (i instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource) {
            i.transform((0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.dsUnique)(), api.cancellationToken).listen((v) => {
                if (result.renderedState) {
                    result.renderedState.lines = [];
                }
                updateText(text, content);
            });
        }
    }
    updateText(text, content);
    const result = {
        ...props,
        opacity: props.opacity ?? 1,
        renderedState: undefined,
        text,
        children: [],
        animations: [],
        type: _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.TEXT
    };
    return result;
}
function updateText(text, content) {
    text.update(content.reduce((p, c) => {
        if (typeof c === 'string') {
            return `${p}${c}`;
        }
        else {
            if (c.value) {
                return `${p}${c.value}`;
            }
            else {
                return p;
            }
        }
    }, ''));
}
//# sourceMappingURL=aurum_text.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/state.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/drawables/state.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "State": () => (/* binding */ State),
/* harmony export */   "stateSymbol": () => (/* binding */ stateSymbol)
/* harmony export */ });
/* harmony import */ var aurumjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurumjs */ "./node_modules/aurumjs/prebuilt/esnext/aurumjs.js");
/* harmony import */ var _component_model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component_model.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/component_model.js");


const stateSymbol = Symbol('state');
function State(props, children, api) {
    const lc = (0,aurumjs__WEBPACK_IMPORTED_MODULE_0__.createLifeCycle)();
    api.synchronizeLifeCycle(lc);
    const components = api.prerender(children, lc);
    return {
        [stateSymbol]: true,
        x: undefined,
        y: undefined,
        ...props,
        renderedState: undefined,
        animations: [],
        children: components,
        type: _component_model_js__WEBPACK_IMPORTED_MODULE_1__.ComponentType.STATE
    };
}
//# sourceMappingURL=state.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/features.js":
/*!**************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/features.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initializeKeyboardPanningFeature": () => (/* binding */ initializeKeyboardPanningFeature),
/* harmony export */   "initializeMousePanningFeature": () => (/* binding */ initializeMousePanningFeature),
/* harmony export */   "initializeZoomFeature": () => (/* binding */ initializeZoomFeature)
/* harmony export */ });
/* harmony import */ var aurumjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurumjs */ "./node_modules/aurumjs/prebuilt/esnext/aurumjs.js");

function initializeKeyboardPanningFeature(props, canvas) {
    let moveToken;
    const keyDown = new Set();
    const moveVector = {
        x: 0,
        y: 0
    };
    window.addEventListener('keyup', (e) => {
        if (e.keyCode === props.features.panning.keyboard.leftKeyCode || e.keyCode === props.features.panning.keyboard.rightKeyCode) {
            moveVector.x = 0;
            keyDown.delete(e.keyCode);
        }
        if (e.keyCode === props.features.panning.keyboard.upKeyCode || e.keyCode === props.features.panning.keyboard.downKeyCode) {
            moveVector.y = 0;
            keyDown.delete(e.keyCode);
        }
        if (moveToken && keyDown.size === 0) {
            moveToken.cancel();
            moveToken = undefined;
        }
    });
    window.addEventListener('keydown', (e) => {
        if (e.keyCode === props.features.panning.keyboard.leftKeyCode) {
            moveVector.x = props.features.panning.keyboard.pixelsPerFrame;
            keyDown.add(e.keyCode);
        }
        if (e.keyCode === props.features.panning.keyboard.downKeyCode) {
            moveVector.y = -props.features.panning.keyboard.pixelsPerFrame;
            keyDown.add(e.keyCode);
        }
        if (e.keyCode === props.features.panning.keyboard.rightKeyCode) {
            moveVector.x = -props.features.panning.keyboard.pixelsPerFrame;
            keyDown.add(e.keyCode);
        }
        if (e.keyCode === props.features.panning.keyboard.upKeyCode) {
            moveVector.y = props.features.panning.keyboard.pixelsPerFrame;
            keyDown.add(e.keyCode);
        }
        if (!moveToken && keyDown.size > 0) {
            moveToken = new aurumjs__WEBPACK_IMPORTED_MODULE_0__.CancellationToken();
            moveToken.animationLoop(() => {
                props.translate.update({
                    x: props.translate.value.x + moveVector.x,
                    y: props.translate.value.y + moveVector.y
                });
            });
        }
    });
}
function initializeMousePanningFeature(props, canvas) {
    let downX;
    let downY;
    let beforeX;
    let beforeY;
    let down = false;
    canvas.addEventListener('mousedown', (e) => {
        downX = e.clientX;
        downY = e.clientY;
        beforeX = props.translate.value.x;
        beforeY = props.translate.value.y;
        down = true;
    });
    document.addEventListener('mousemove', (e) => {
        if (down) {
            props.translate.update({
                x: beforeX - (downX - e.clientX) / props.scale.value.x,
                y: beforeY - (downY - e.clientY) / props.scale.value.y
            });
        }
    });
    document.addEventListener('mouseup', (e) => {
        down = false;
    });
}
function initializeZoomFeature(props, canvas) {
    canvas.addEventListener('wheel', (e) => {
        if (e.deltaY > 0) {
            if (props.scale.value.x < props.features.mouseWheelZoom.minZoom) {
                return;
            }
            props.translate.update({
                x: props.translate.value.x + (e.offsetX * (props.features.mouseWheelZoom.zoomIncrements - 1)) / props.scale.value.x,
                y: props.translate.value.y + (e.offsetY * (props.features.mouseWheelZoom.zoomIncrements - 1)) / props.scale.value.y
            });
            props.scale.update({
                x: props.scale.value.x / props.features.mouseWheelZoom.zoomIncrements,
                y: props.scale.value.y / props.features.mouseWheelZoom.zoomIncrements
            });
        }
        else {
            if (props.scale.value.x > props.features.mouseWheelZoom.maxZoom) {
                return;
            }
            props.scale.update({
                x: props.scale.value.x * props.features.mouseWheelZoom.zoomIncrements,
                y: props.scale.value.y * props.features.mouseWheelZoom.zoomIncrements
            });
            props.translate.update({
                x: props.translate.value.x - (e.offsetX * (props.features.mouseWheelZoom.zoomIncrements - 1)) / props.scale.value.x,
                y: props.translate.value.y - (e.offsetY * (props.features.mouseWheelZoom.zoomIncrements - 1)) / props.scale.value.y
            });
        }
    });
}
//# sourceMappingURL=features.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/rendering.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/rendering.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "renderBezierCurve": () => (/* binding */ renderBezierCurve),
/* harmony export */   "renderElipse": () => (/* binding */ renderElipse),
/* harmony export */   "renderLine": () => (/* binding */ renderLine),
/* harmony export */   "renderPath": () => (/* binding */ renderPath),
/* harmony export */   "renderQuadraticCurve": () => (/* binding */ renderQuadraticCurve),
/* harmony export */   "renderRectangle": () => (/* binding */ renderRectangle),
/* harmony export */   "renderRegularPolygon": () => (/* binding */ renderRegularPolygon),
/* harmony export */   "renderText": () => (/* binding */ renderText)
/* harmony export */ });
/* unused harmony export resolveValues */
/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utilities.js */ "./node_modules/aurum-canvas/prebuilt/esnext/components/utilities.js");

const regularPolygonKeys = ['x', 'y', 'opacity', 'strokeColor', 'fillColor', 'path', 'sides', 'radius', 'originX', 'originY'];
const pathKeys = ['x', 'y', 'opacity', 'strokeColor', 'fillColor', 'path', 'lineWidth', 'originX', 'originY'];
const elipseKeys = ['x', 'y', 'opacity', 'strokeColor', 'fillColor', 'rotation', 'rx', 'ry', 'startAngle', 'endAngle', 'originX', 'originY'];
const lineKeys = ['x', 'y', 'opacity', 'strokeColor', 'fillColor', 'tx', 'ty', 'lineWidth', 'originX', 'originY'];
const quadraticCurveKeys = ['x', 'y', 'opacity', 'strokeColor', 'fillColor', 'tx', 'ty', 'cx', 'cy', 'lineWidth', 'originX', 'originY'];
const bezierCurveKeys = ['x', 'y', 'opacity', 'strokeColor', 'fillColor', 'tx', 'ty', 'cx', 'cy', 'c2x', 'c2y', 'lineWidth', 'originX', 'originY'];
const textKeys = [
    'x',
    'y',
    'realWidth',
    'width',
    'font',
    'fontSize',
    'opacity',
    'strokeColor',
    'fillColor',
    'text',
    'fontWeight',
    'wrapWidth',
    'lineHeight',
    'textBaseline',
    'originX',
    'originY'
];
const rectangleKeys = ['x', 'y', 'width', 'height', 'opacity', 'strokeColor', 'fillColor', 'originX', 'originY'];
function renderElipse(context, child, offsetX, offsetY) {
    const renderedState = resolveValues(child, elipseKeys, offsetX, offsetY);
    const { x, y, idle, fillColor, strokeColor, opacity, rx, ry, rotation, startAngle, endAngle } = renderedState;
    child.renderedState = renderedState;
    child.onPreDraw?.(child.renderedState);
    context.globalAlpha = opacity;
    const path2d = new Path2D();
    if ((fillColor || strokeColor) && rx > 0.01 && ry > 0.01 && (startAngle ?? 0 !== endAngle)) {
        path2d.ellipse(x, y, rx, ry, rotation ?? 0, startAngle ?? 0, endAngle ?? Math.PI * 2);
        child.renderedState.path = path2d;
    }
    else {
        child.renderedState.path = undefined;
    }
    drawCanvasPath(child, context, path2d, fillColor, strokeColor);
    return idle;
}
function renderLine(context, child, offsetX, offsetY) {
    const renderedState = resolveValues(child, lineKeys, offsetX, offsetY);
    const { x, y, idle, fillColor, strokeColor, opacity, tx, ty, lineWidth } = renderedState;
    child.renderedState = renderedState;
    child.onPreDraw?.(child.renderedState);
    const path2d = new Path2D();
    context.globalAlpha = opacity;
    if (fillColor || strokeColor) {
        path2d.moveTo(x, y);
        path2d.lineTo(tx, ty);
        context.lineWidth = lineWidth;
        child.renderedState.path = path2d;
    }
    else {
        child.renderedState.path = undefined;
    }
    drawCanvasPath(child, context, path2d, fillColor, strokeColor);
    return idle;
}
function renderQuadraticCurve(context, child, offsetX, offsetY) {
    const renderedState = resolveValues(child, quadraticCurveKeys, offsetX, offsetY);
    const { x, y, cx, cy, idle, fillColor, strokeColor, opacity, tx, ty, lineWidth } = renderedState;
    child.renderedState = renderedState;
    child.onPreDraw?.(child.renderedState);
    context.globalAlpha = opacity;
    const path2d = new Path2D();
    if (fillColor || strokeColor) {
        path2d.moveTo(x, y);
        path2d.quadraticCurveTo(cx, cy, tx, ty);
        context.lineWidth = lineWidth;
        child.renderedState.path = path2d;
    }
    else {
        child.renderedState.path = undefined;
    }
    drawCanvasPath(child, context, path2d, fillColor, strokeColor);
    return idle;
}
function renderBezierCurve(context, child, offsetX, offsetY) {
    const renderedState = resolveValues(child, bezierCurveKeys, offsetX, offsetY);
    const { x, y, cx, cy, c2x, c2y, idle, fillColor, strokeColor, opacity, tx, ty, lineWidth } = renderedState;
    child.renderedState = renderedState;
    child.onPreDraw?.(child.renderedState);
    context.globalAlpha = opacity;
    const path2d = new Path2D();
    if (fillColor || strokeColor) {
        path2d.moveTo(x, y);
        path2d.bezierCurveTo(cx, cy, c2x, c2y, tx, ty);
        context.lineWidth = lineWidth;
        child.renderedState.path = path2d;
    }
    else {
        child.renderedState.path = undefined;
    }
    drawCanvasPath(child, context, path2d, fillColor, strokeColor);
    return idle;
}
function drawCanvasPath(child, context, path2d, fillColor, strokeColor) {
    if (child.fillColor) {
        context.fillStyle = fillColor;
        context.fill(path2d);
    }
    if (child.strokeColor) {
        context.strokeStyle = strokeColor;
        context.stroke(path2d);
    }
    if (child.clip) {
        context.clip(path2d);
    }
}
function renderPath(context, child, offsetX, offsetY) {
    const renderedState = resolveValues(child, pathKeys, offsetX, offsetY);
    const { x, y, idle, fillColor, strokeColor, opacity, path, lineWidth } = renderedState;
    child.renderedState = renderedState;
    child.onPreDraw?.(child.renderedState);
    let path2d;
    context.globalAlpha = opacity;
    if (fillColor || strokeColor) {
        context.lineWidth = lineWidth;
        path2d = new Path2D(path);
        child.renderedState.path = path2d;
    }
    else {
        child.renderedState.path = undefined;
    }
    if (child.fillColor) {
        context.translate(x, y);
        context.fillStyle = fillColor;
        context.fill(path2d);
        context.translate(-x, -y);
    }
    if (child.strokeColor) {
        context.translate(x, y);
        context.strokeStyle = strokeColor;
        context.stroke(path2d);
        context.translate(-x, -y);
    }
    if (child.clip) {
        context.translate(x, y);
        context.clip(path2d);
        context.translate(-x, -y);
    }
    return idle;
}
function renderRegularPolygon(context, child, offsetX, offsetY) {
    const renderedState = resolveValues(child, regularPolygonKeys, offsetX, offsetY);
    const { x, y, idle, fillColor, strokeColor, opacity, sides, radius } = renderedState;
    child.renderedState = renderedState;
    child.onPreDraw?.(child.renderedState);
    context.globalAlpha = opacity;
    if (renderedState.sides < 3) {
        return idle;
    }
    const path2d = new Path2D();
    if (fillColor || strokeColor) {
        let angle = 0;
        for (let i = 0; i < sides; i++) {
            angle += Math.PI / (sides / 2);
            const targetX = radius * Math.cos(angle);
            const targetY = radius * Math.sin(angle);
            if (i === 0) {
                path2d.moveTo(targetX + radius + x, targetY + radius + y);
            }
            else {
                path2d.lineTo(targetX + radius + x, targetY + radius + y);
            }
        }
        child.renderedState.path = path2d;
    }
    else {
        child.renderedState.path = undefined;
    }
    drawCanvasPath(child, context, path2d, fillColor, strokeColor);
    return idle;
}
function renderText(context, child, offsetX, offsetY) {
    const renderedState = resolveValues(child, textKeys, offsetX, offsetY, false);
    let { x, y, idle, fontSize = 16, textBaseline, font, fillColor, strokeColor, opacity, text, fontWeight, width, wrapWidth, lineHeight, originX } = renderedState;
    if (child.renderedState?.width && !renderedState.width) {
        renderedState.width = child.renderedState.width;
    }
    if (child.renderedState?.realWidth && !renderedState.realWidth) {
        renderedState.realWidth = child.renderedState.realWidth;
    }
    renderedState.lines = child.renderedState?.lines;
    child.renderedState = renderedState;
    child.renderedState.lines = child.renderedState.lines ?? [];
    let lines = child.renderedState.lines;
    if (textBaseline) {
        context.textBaseline = textBaseline;
    }
    context.font = `${fontWeight ? fontWeight + ' ' : ''}${fontSize}px ${font ?? 'Arial'}`;
    renderedState.height = fontSize;
    if (lines.length === 0) {
        if (wrapWidth) {
            child.renderedState.realWidth = 0;
            const pieces = text.split(' ');
            let line = pieces.shift();
            while (pieces.length) {
                const measuredWidth = context.measureText(line + ' ' + pieces[0]);
                if (measuredWidth.width > child.renderedState.realWidth) {
                    child.renderedState.realWidth = measuredWidth.width;
                }
                if (measuredWidth <= wrapWidth) {
                    line += ' ' + pieces.shift();
                }
                else {
                    lines.push(line);
                    line = pieces.shift();
                }
            }
            lines.push(line);
        }
        else {
            if (!width) {
                child.renderedState.realWidth = child.renderedState.width = context.measureText(text).width;
            }
            else {
                child.renderedState.realWidth = context.measureText(text).width;
            }
            lines.push(text);
        }
    }
    child.onPreDraw?.(child.renderedState);
    context.globalAlpha = opacity;
    if (originX) {
        x -= Math.min(child.renderedState.realWidth, child.renderedState.width) * originX;
    }
    for (let i = 0; i < lines.length; i++) {
        if (fillColor) {
            context.fillStyle = fillColor;
            context.fillText(lines[i], x, y + (lineHeight ?? 16) * i, width);
        }
        if (strokeColor) {
            context.strokeStyle = strokeColor;
            context.strokeText(lines[i], x, y + (lineHeight ?? 16) * i, width);
        }
    }
    return idle;
}
function renderRectangle(context, child, offsetX, offsetY) {
    const renderedState = resolveValues(child, rectangleKeys, offsetX, offsetY);
    const { x, y, width, height, idle, fillColor, strokeColor, opacity } = renderedState;
    child.renderedState = renderedState;
    child.onPreDraw?.(child.renderedState);
    if (opacity <= 0 && !child.clip) {
        return idle;
    }
    context.globalAlpha = opacity;
    if (fillColor) {
        context.fillStyle = fillColor;
        context.fillRect(x, y, width, height);
    }
    if (strokeColor) {
        context.strokeStyle = strokeColor;
        context.strokeRect(x, y, width, height);
    }
    if (child.clip) {
        context.beginPath();
        context.rect(x, y, width, height);
        context.clip();
    }
    return idle;
}
function resolveValues(node, props, offsetX, offsetY, applyOrigin = true) {
    const result = {
        idle: true,
        x: 0,
        y: 0
    };
    let idle = true;
    for (const key of props) {
        const baseValue = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_0__.deref)(node[key]);
        const state = node.animationStates?.find((n) => n[key] != undefined);
        if (state) {
            let progress;
            if (!state.transitionTime) {
                progress = 1;
            }
            else {
                progress = Math.min(1, (Date.now() - node.animationTime) / (0,_utilities_js__WEBPACK_IMPORTED_MODULE_0__.deref)(state.transitionTime));
            }
            const targetValue = state[key];
            result[key] = baseValue + (targetValue - baseValue) * progress;
            if (progress < 1) {
                idle = false;
            }
        }
        else {
            result[key] = baseValue;
        }
    }
    result.x += offsetX;
    result.y += offsetY;
    if (applyOrigin) {
        //@ts-ignore
        if (result.originX && result.width) {
            //@ts-ignore
            result.x -= result.width * result.originX;
        }
        //@ts-ignore
        if (result.originY && result.height) {
            //@ts-ignore
            result.y -= result.height * result.originY;
        }
    }
    if ('tx' in result) {
        //@ts-ignore
        result.tx += offsetX;
    }
    if ('ty' in result) {
        //@ts-ignore
        result.ty += offsetY;
    }
    if ('cx' in result) {
        //@ts-ignore
        result.cx += offsetX;
    }
    if ('cy' in result) {
        //@ts-ignore
        result.cy += offsetY;
    }
    if ('c2x' in result) {
        //@ts-ignore
        result.c2x += offsetX;
    }
    if ('c2y' in result) {
        //@ts-ignore
        result.c2y += offsetY;
    }
    result.idle = idle;
    return result;
}
//# sourceMappingURL=rendering.js.map

/***/ }),

/***/ "./node_modules/aurum-canvas/prebuilt/esnext/components/utilities.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aurum-canvas/prebuilt/esnext/components/utilities.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deref": () => (/* binding */ deref)
/* harmony export */ });
/* harmony import */ var aurumjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurumjs */ "./node_modules/aurumjs/prebuilt/esnext/aurumjs.js");

function deref(source) {
    if (source instanceof aurumjs__WEBPACK_IMPORTED_MODULE_0__.DataSource) {
        return source.value;
    }
    else {
        return source;
    }
}
//# sourceMappingURL=utilities.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,