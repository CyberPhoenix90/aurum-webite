{
  "version": 3,
  "sources": ["../../aurum-canvas/src/components/component_model.ts", "../../aurum-canvas/src/components/drawables/state.tsx", "../../aurum-canvas/src/components/utilities.ts", "../../aurum-canvas/src/components/rendering.ts", "../../aurum-canvas/src/components/features.ts", "../../aurum-canvas/src/components/canvas.tsx", "../../aurum-canvas/src/components/drawables/aurum_rectangle.tsx", "../../aurum-canvas/src/components/drawables/aurum_text.tsx", "../../aurum-canvas/src/components/drawables/aurum_line.tsx", "../../aurum-canvas/src/components/drawables/aurum_elipse.tsx", "../../aurum-canvas/src/components/drawables/aurum_group.tsx", "../../aurum-canvas/src/components/drawables/aurum_path.tsx", "../../aurum-canvas/src/components/drawables/aurum_image.tsx", "../../aurum-canvas/src/components/drawables/aurum_regular_polygon.tsx"],
  "sourcesContent": ["import { ReadOnlyDataSource } from 'aurumjs';\r\nimport { InteractionProps } from './common_props.js';\r\nimport { StateComponentModel } from './drawables/state.js';\r\n\r\nexport interface ComponentModel extends InteractionProps {\r\n    type: ComponentType;\r\n    state?: string | ReadOnlyDataSource<string>;\r\n    clip?: boolean | ReadOnlyDataSource<boolean>;\r\n    x: number | ReadOnlyDataSource<number>;\r\n    y: number | ReadOnlyDataSource<number>;\r\n    children: ComponentModel[];\r\n    animationStates?: StateComponentModel[];\r\n    animationTime?: number;\r\n    animations: StateComponentModel[];\r\n    renderedState?: RenderData;\r\n    onPreDraw?(props: RenderData);\r\n}\r\n\r\nexport interface RenderData {\r\n    radius: number;\r\n    path: Path2D;\r\n    lines: string[];\r\n    x: number;\r\n    y: number;\r\n    realWidth?: number;\r\n    width?: number;\r\n    height?: number;\r\n    tx?: number;\r\n    ty?: number;\r\n    strokeColor?: string;\r\n    fillColor?: string;\r\n    rx?: number;\r\n    ry?: number;\r\n    originX?: number;\r\n    originY?: number;\r\n    opacity?: number;\r\n    rotation?: number;\r\n    lineThickness?: number;\r\n    fontSize?: number;\r\n    font?: string;\r\n}\r\n\r\nexport enum ComponentType {\r\n    RECTANGLE,\r\n    ELIPSE,\r\n    LINE,\r\n    TEXT,\r\n    IMAGE,\r\n    GROUP,\r\n    STATE,\r\n    PATH,\r\n    QUADRATIC_CURVE,\r\n    BEZIER_CURVE,\r\n    REGULAR_POLYGON\r\n}\r\n", "import { DataSource, Renderable, AurumComponentAPI, createLifeCycle } from 'aurumjs';\r\nimport { ComponentModel, ComponentType } from '../component_model.js';\r\nexport const stateSymbol = Symbol('state');\r\n\r\nexport interface StateProps {\r\n    id: string;\r\n    state?: string | DataSource<string>;\r\n    width?: number | DataSource<number>;\r\n    height?: number | DataSource<number>;\r\n    x?: number | DataSource<number>;\r\n    y?: number | DataSource<number>;\r\n    rx?: number | DataSource<number>;\r\n    ry?: number | DataSource<number>;\r\n    strokeColor?: string | DataSource<string>;\r\n    fillColor?: string | DataSource<string>;\r\n    opacity?: number | DataSource<number>;\r\n    rotation?: number | DataSource<number>;\r\n    startAngle?: number | DataSource<number>;\r\n    endAngle?: number | DataSource<number>;\r\n    transitionTime?: number | DataSource<number>;\r\n    easing?: (t: number) => number;\r\n    fontSize?: number | DataSource<number>;\r\n    font?: string | DataSource<string>;\r\n}\r\n\r\nexport interface StateComponentModel extends ComponentModel {\r\n    [stateSymbol]: boolean;\r\n    id: string;\r\n    state?: string | DataSource<string>;\r\n    rx?: number | DataSource<number>;\r\n    ry?: number | DataSource<number>;\r\n    width?: number | DataSource<number>;\r\n    height?: number | DataSource<number>;\r\n    strokeColor?: string | DataSource<string>;\r\n    fillColor?: string | DataSource<string>;\r\n    opacity?: number | DataSource<number>;\r\n    rotation?: number | DataSource<number>;\r\n    startAngle?: number | DataSource<number>;\r\n    easing?: (t: number) => number;\r\n    endAngle?: number | DataSource<number>;\r\n    transitionTime?: number | DataSource<number>;\r\n    fontSize?: number | DataSource<number>;\r\n    font?: string | DataSource<string>;\r\n}\r\n\r\nexport function State(props: StateProps, children: Renderable[], api: AurumComponentAPI): StateComponentModel {\r\n    const lc = createLifeCycle();\r\n    api.synchronizeLifeCycle(lc);\r\n\r\n    const components = api.prerender(children, lc);\r\n    return {\r\n        [stateSymbol]: true,\r\n        x: undefined,\r\n        y: undefined,\r\n        ...props,\r\n        renderedState: undefined,\r\n\r\n        animations: [],\r\n        children: components as any,\r\n        type: ComponentType.STATE\r\n    };\r\n}\r\n", "import { DataSource } from 'aurumjs';\n\nexport function deref<T>(source: DataSource<T> | T): T {\n\tif (source instanceof DataSource) {\n\t\treturn source.value;\n\t} else {\n\t\treturn source;\n\t}\n}\n", "import { RectangleComponentModel } from './drawables/aurum_rectangle.js';\nimport { TextComponentModel } from './drawables/aurum_text.js';\nimport { LineComponentModel } from './drawables/aurum_line.js';\nimport { ElipseComponentModel } from './drawables/aurum_elipse.js';\nimport { PathComponentModel } from './drawables/aurum_path.js';\nimport { QuadraticCurveComponentModel } from './drawables/aurum_quadratic_curve.js';\nimport { BezierCurveComponentModel } from './drawables/aurum_bezier_curve.js';\nimport { deref } from './utilities.js';\nimport { ComponentModel } from './component_model.js';\nimport { CommonProps } from './common_props.js';\n\nconst regularPolygonKeys = ['x', 'y', 'opacity', 'strokeColor', 'fillColor', 'path', 'sides', 'radius', 'originX', 'originY'];\nconst pathKeys = ['x', 'y', 'opacity', 'strokeColor', 'fillColor', 'path', 'lineWidth', 'originX', 'originY'];\nconst elipseKeys = ['x', 'y', 'opacity', 'strokeColor', 'fillColor', 'rotation', 'rx', 'ry', 'startAngle', 'endAngle', 'originX', 'originY'];\nconst lineKeys = ['x', 'y', 'opacity', 'strokeColor', 'fillColor', 'tx', 'ty', 'lineWidth', 'originX', 'originY'];\nconst quadraticCurveKeys = ['x', 'y', 'opacity', 'strokeColor', 'fillColor', 'tx', 'ty', 'cx', 'cy', 'lineWidth', 'originX', 'originY'];\nconst bezierCurveKeys = ['x', 'y', 'opacity', 'strokeColor', 'fillColor', 'tx', 'ty', 'cx', 'cy', 'c2x', 'c2y', 'lineWidth', 'originX', 'originY'];\nconst textKeys = [\n    'x',\n    'y',\n    'realWidth',\n    'width',\n    'font',\n    'fontSize',\n    'opacity',\n    'strokeColor',\n    'fillColor',\n    'text',\n    'fontWeight',\n    'wrapWidth',\n    'lineHeight',\n    'textBaseline',\n    'originX',\n    'originY'\n];\nconst rectangleKeys = ['x', 'y', 'width', 'height', 'opacity', 'strokeColor', 'fillColor', 'originX', 'originY'];\n\nexport function renderElipse(context: CanvasRenderingContext2D, child: ElipseComponentModel, offsetX: number, offsetY: number): boolean {\n    const renderedState = resolveValues(child, elipseKeys, offsetX, offsetY);\n    const { x, y, idle, fillColor, strokeColor, opacity, rx, ry, rotation, startAngle, endAngle } = renderedState;\n    child.renderedState = renderedState;\n\n    child.onPreDraw?.(child.renderedState);\n    context.globalAlpha = opacity;\n    const path2d = new Path2D();\n\n    if ((fillColor || strokeColor) && rx > 0.01 && ry > 0.01 && (startAngle ?? 0 !== endAngle)) {\n        path2d.ellipse(x, y, rx, ry, rotation ?? 0, startAngle ?? 0, endAngle ?? Math.PI * 2);\n        child.renderedState.path = path2d;\n    } else {\n        child.renderedState.path = undefined;\n    }\n\n    drawCanvasPath(child, context, path2d, fillColor, strokeColor);\n\n    return idle;\n}\n\nexport function renderLine(context: CanvasRenderingContext2D, child: LineComponentModel, offsetX: number, offsetY: number): boolean {\n    const renderedState = resolveValues(child, lineKeys, offsetX, offsetY);\n    const { x, y, idle, fillColor, strokeColor, opacity, tx, ty, lineWidth } = renderedState;\n    child.renderedState = renderedState;\n    child.onPreDraw?.(child.renderedState);\n    const path2d = new Path2D();\n\n    context.globalAlpha = opacity;\n    if (fillColor || strokeColor) {\n        path2d.moveTo(x, y);\n        path2d.lineTo(tx, ty);\n        context.lineWidth = lineWidth;\n        child.renderedState.path = path2d;\n    } else {\n        child.renderedState.path = undefined;\n    }\n\n    drawCanvasPath(child, context, path2d, fillColor, strokeColor);\n\n    return idle;\n}\n\nexport function renderQuadraticCurve(context: CanvasRenderingContext2D, child: QuadraticCurveComponentModel, offsetX: number, offsetY: number): boolean {\n    const renderedState = resolveValues(child, quadraticCurveKeys, offsetX, offsetY);\n    const { x, y, cx, cy, idle, fillColor, strokeColor, opacity, tx, ty, lineWidth } = renderedState;\n    child.renderedState = renderedState;\n    child.onPreDraw?.(child.renderedState);\n\n    context.globalAlpha = opacity;\n    const path2d = new Path2D();\n    if (fillColor || strokeColor) {\n        path2d.moveTo(x, y);\n        path2d.quadraticCurveTo(cx, cy, tx, ty);\n        context.lineWidth = lineWidth;\n        child.renderedState.path = path2d;\n    } else {\n        child.renderedState.path = undefined;\n    }\n\n    drawCanvasPath(child, context, path2d, fillColor, strokeColor);\n\n    return idle;\n}\n\nexport function renderBezierCurve(context: CanvasRenderingContext2D, child: BezierCurveComponentModel, offsetX: number, offsetY: number): boolean {\n    const renderedState = resolveValues(child, bezierCurveKeys, offsetX, offsetY);\n    const { x, y, cx, cy, c2x, c2y, idle, fillColor, strokeColor, opacity, tx, ty, lineWidth } = renderedState;\n    child.renderedState = renderedState;\n    child.onPreDraw?.(child.renderedState);\n\n    context.globalAlpha = opacity;\n    const path2d = new Path2D();\n    if (fillColor || strokeColor) {\n        path2d.moveTo(x, y);\n        path2d.bezierCurveTo(cx, cy, c2x, c2y, tx, ty);\n        context.lineWidth = lineWidth;\n        child.renderedState.path = path2d;\n    } else {\n        child.renderedState.path = undefined;\n    }\n\n    drawCanvasPath(child, context, path2d, fillColor, strokeColor);\n\n    return idle;\n}\n\nfunction drawCanvasPath(child: CommonProps, context: CanvasRenderingContext2D, path2d: Path2D, fillColor: any, strokeColor: any) {\n    if (child.fillColor) {\n        context.fillStyle = fillColor;\n        context.fill(path2d);\n    }\n    if (child.strokeColor) {\n        context.strokeStyle = strokeColor;\n        context.stroke(path2d);\n    }\n\n    if (child.clip) {\n        context.clip(path2d);\n    }\n}\n\nexport function renderPath(context: CanvasRenderingContext2D, child: PathComponentModel, offsetX: number, offsetY: number): boolean {\n    const renderedState = resolveValues(child, pathKeys, offsetX, offsetY);\n    const { x, y, idle, fillColor, strokeColor, opacity, path, lineWidth } = renderedState;\n    child.renderedState = renderedState;\n    child.onPreDraw?.(child.renderedState);\n\n    let path2d: Path2D;\n    context.globalAlpha = opacity;\n    if (fillColor || strokeColor) {\n        context.lineWidth = lineWidth;\n        path2d = new Path2D(path);\n        child.renderedState.path = path2d;\n    } else {\n        child.renderedState.path = undefined;\n    }\n\n    if (child.fillColor) {\n        context.translate(x, y);\n        context.fillStyle = fillColor;\n        context.fill(path2d);\n        context.translate(-x, -y);\n    }\n    if (child.strokeColor) {\n        context.translate(x, y);\n        context.strokeStyle = strokeColor;\n        context.stroke(path2d);\n        context.translate(-x, -y);\n    }\n\n    if (child.clip) {\n        context.translate(x, y);\n        context.clip(path2d);\n        context.translate(-x, -y);\n    }\n\n    return idle;\n}\n\nexport function renderRegularPolygon(context: CanvasRenderingContext2D, child: PathComponentModel, offsetX: number, offsetY: number): boolean {\n    const renderedState = resolveValues(child, regularPolygonKeys, offsetX, offsetY);\n    const { x, y, idle, fillColor, strokeColor, opacity, sides, radius } = renderedState;\n    child.renderedState = renderedState;\n\n    child.onPreDraw?.(child.renderedState);\n    context.globalAlpha = opacity;\n\n    if (renderedState.sides < 3) {\n        return idle;\n    }\n    const path2d = new Path2D();\n\n    if (fillColor || strokeColor) {\n        let angle = 0;\n        for (let i = 0; i < sides; i++) {\n            angle += Math.PI / (sides / 2);\n            const targetX = radius * Math.cos(angle);\n            const targetY = radius * Math.sin(angle);\n            if (i === 0) {\n                path2d.moveTo(targetX + radius + x, targetY + radius + y);\n            } else {\n                path2d.lineTo(targetX + radius + x, targetY + radius + y);\n            }\n        }\n\n        child.renderedState.path = path2d;\n    } else {\n        child.renderedState.path = undefined;\n    }\n\n    drawCanvasPath(child, context, path2d, fillColor, strokeColor);\n\n    return idle;\n}\n\nexport function renderText(context: CanvasRenderingContext2D, child: TextComponentModel, offsetX: number, offsetY: number): boolean {\n    const renderedState = resolveValues(child, textKeys, offsetX, offsetY, false);\n    let {\n        x,\n        y,\n        idle,\n        fontSize = 16,\n        textBaseline,\n        font,\n        fillColor,\n        strokeColor,\n        opacity,\n        text,\n        fontWeight,\n        width,\n        wrapWidth,\n        lineHeight,\n        originX\n    } = renderedState;\n\n    if (child.renderedState?.width && !renderedState.width) {\n        renderedState.width = child.renderedState.width;\n    }\n\n    if (child.renderedState?.realWidth && !renderedState.realWidth) {\n        renderedState.realWidth = child.renderedState.realWidth;\n    }\n\n    renderedState.lines = child.renderedState?.lines;\n    child.renderedState = renderedState;\n\n    child.renderedState.lines = child.renderedState.lines ?? [];\n    let lines = child.renderedState.lines;\n    if (textBaseline) {\n        context.textBaseline = textBaseline;\n    }\n    context.font = `${fontWeight ? fontWeight + ' ' : ''}${fontSize}px ${font ?? 'Arial'}`;\n    renderedState.height = fontSize;\n\n    if (lines.length === 0) {\n        if (wrapWidth) {\n            child.renderedState.realWidth = 0;\n            const pieces: string[] = text.split(' ');\n            let line = pieces.shift();\n            while (pieces.length) {\n                const measuredWidth = context.measureText(line + ' ' + pieces[0]);\n                if (measuredWidth.width > child.renderedState.realWidth) {\n                    child.renderedState.realWidth = measuredWidth.width;\n                }\n                if (measuredWidth <= wrapWidth) {\n                    line += ' ' + pieces.shift();\n                } else {\n                    lines.push(line);\n                    line = pieces.shift();\n                }\n            }\n            lines.push(line);\n        } else {\n            if (!width) {\n                child.renderedState.realWidth = child.renderedState.width = context.measureText(text).width;\n            } else {\n                child.renderedState.realWidth = context.measureText(text).width;\n            }\n            lines.push(text);\n        }\n    }\n\n    child.onPreDraw?.(child.renderedState);\n    context.globalAlpha = opacity;\n\n    if (originX) {\n        x -= Math.min(child.renderedState.realWidth, child.renderedState.width) * originX;\n    }\n\n    for (let i = 0; i < lines.length; i++) {\n        if (fillColor) {\n            context.fillStyle = fillColor;\n            context.fillText(lines[i], x, y + (lineHeight ?? 16) * i, width);\n        }\n        if (strokeColor) {\n            context.strokeStyle = strokeColor;\n            context.strokeText(lines[i], x, y + (lineHeight ?? 16) * i, width);\n        }\n    }\n\n    return idle;\n}\n\nexport function renderRectangle(context: CanvasRenderingContext2D, child: RectangleComponentModel, offsetX: number, offsetY: number): boolean {\n    const renderedState = resolveValues(child, rectangleKeys, offsetX, offsetY);\n    const { x, y, width, height, idle, fillColor, strokeColor, opacity } = renderedState;\n    child.renderedState = renderedState;\n\n    child.onPreDraw?.(child.renderedState);\n\n    if (opacity <= 0 && !child.clip) {\n        return idle;\n    }\n\n    context.globalAlpha = opacity;\n\n    if (fillColor) {\n        context.fillStyle = fillColor;\n        context.fillRect(x, y, width, height);\n    }\n    if (strokeColor) {\n        context.strokeStyle = strokeColor;\n        context.strokeRect(x, y, width, height);\n    }\n\n    if (child.clip) {\n        context.beginPath();\n        context.rect(x, y, width, height);\n        context.clip();\n    }\n\n    return idle;\n}\n\nexport function resolveValues(node: ComponentModel, props: string[], offsetX: number, offsetY: number, applyOrigin: boolean = true): any {\n    const result = {\n        idle: true,\n        x: 0,\n        y: 0\n    };\n    let idle = true;\n\n    for (const key of props) {\n        const baseValue = deref(node[key]);\n        const state = node.animationStates?.find((n) => n[key] != undefined);\n        if (state) {\n            let progress;\n            if (!state.transitionTime) {\n                progress = 1;\n            } else {\n                progress = Math.min(1, (Date.now() - node.animationTime) / deref(state.transitionTime));\n            }\n            const targetValue = state[key];\n            result[key] = baseValue + (targetValue - baseValue) * progress;\n            if (progress < 1) {\n                idle = false;\n            }\n        } else {\n            result[key] = baseValue;\n        }\n    }\n    result.x += offsetX;\n    result.y += offsetY;\n\n    if (applyOrigin) {\n        //@ts-ignore\n        if (result.originX && result.width) {\n            //@ts-ignore\n            result.x -= result.width * result.originX;\n        }\n\n        //@ts-ignore\n        if (result.originY && result.height) {\n            //@ts-ignore\n            result.y -= result.height * result.originY;\n        }\n    }\n\n    if ('tx' in result) {\n        //@ts-ignore\n        result.tx += offsetX;\n    }\n    if ('ty' in result) {\n        //@ts-ignore\n        result.ty += offsetY;\n    }\n\n    if ('cx' in result) {\n        //@ts-ignore\n        result.cx += offsetX;\n    }\n    if ('cy' in result) {\n        //@ts-ignore\n        result.cy += offsetY;\n    }\n\n    if ('c2x' in result) {\n        //@ts-ignore\n        result.c2x += offsetX;\n    }\n    if ('c2y' in result) {\n        //@ts-ignore\n        result.c2y += offsetY;\n    }\n    result.idle = idle;\n    return result;\n}\n", "import { CancellationToken } from 'aurumjs';\nimport { AurumCanvasProps } from './canvas.js';\n\nexport function initializeKeyboardPanningFeature(props: AurumCanvasProps, canvas: HTMLCanvasElement): void {\n    let moveToken: CancellationToken;\n    const keyDown = new Set();\n    const moveVector = {\n        x: 0,\n        y: 0\n    };\n\n    window.addEventListener('keyup', (e) => {\n        if (e.keyCode === props.features.panning.keyboard.leftKeyCode || e.keyCode === props.features.panning.keyboard.rightKeyCode) {\n            moveVector.x = 0;\n            keyDown.delete(e.keyCode);\n        }\n\n        if (e.keyCode === props.features.panning.keyboard.upKeyCode || e.keyCode === props.features.panning.keyboard.downKeyCode) {\n            moveVector.y = 0;\n            keyDown.delete(e.keyCode);\n        }\n\n        if (moveToken && keyDown.size === 0) {\n            moveToken.cancel();\n            moveToken = undefined;\n        }\n    });\n\n    window.addEventListener('keydown', (e) => {\n        if (e.keyCode === props.features.panning.keyboard.leftKeyCode) {\n            moveVector.x = props.features.panning.keyboard.pixelsPerFrame;\n            keyDown.add(e.keyCode);\n        }\n\n        if (e.keyCode === props.features.panning.keyboard.downKeyCode) {\n            moveVector.y = -props.features.panning.keyboard.pixelsPerFrame;\n            keyDown.add(e.keyCode);\n        }\n\n        if (e.keyCode === props.features.panning.keyboard.rightKeyCode) {\n            moveVector.x = -props.features.panning.keyboard.pixelsPerFrame;\n            keyDown.add(e.keyCode);\n        }\n\n        if (e.keyCode === props.features.panning.keyboard.upKeyCode) {\n            moveVector.y = props.features.panning.keyboard.pixelsPerFrame;\n            keyDown.add(e.keyCode);\n        }\n\n        if (!moveToken && keyDown.size > 0) {\n            moveToken = new CancellationToken();\n            moveToken.animationLoop(() => {\n                props.translate.update({\n                    x: props.translate.value.x + moveVector.x,\n                    y: props.translate.value.y + moveVector.y\n                });\n            });\n        }\n    });\n}\n\nexport function initializeMousePanningFeature(props: AurumCanvasProps, canvas: HTMLCanvasElement): void {\n    let downX: number;\n    let downY: number;\n    let beforeX: number;\n    let beforeY: number;\n    let down: boolean = false;\n\n    canvas.addEventListener('mousedown', (e) => {\n        downX = e.clientX;\n        downY = e.clientY;\n        beforeX = props.translate.value.x;\n        beforeY = props.translate.value.y;\n        down = true;\n    });\n\n    document.addEventListener('mousemove', (e) => {\n        if (down) {\n            props.translate.update({\n                x: beforeX - (downX - e.clientX) / props.scale.value.x,\n                y: beforeY - (downY - e.clientY) / props.scale.value.y\n            });\n        }\n    });\n\n    document.addEventListener('mouseup', (e) => {\n        down = false;\n    });\n}\n\nexport function initializeZoomFeature(props: AurumCanvasProps, canvas: HTMLCanvasElement): void {\n    canvas.addEventListener('wheel', (e) => {\n        if (e.deltaY > 0) {\n            if (props.scale.value.x < props.features.mouseWheelZoom.minZoom) {\n                return;\n            }\n\n            props.translate.update({\n                x: props.translate.value.x + (e.offsetX * (props.features.mouseWheelZoom.zoomIncrements - 1)) / props.scale.value.x,\n                y: props.translate.value.y + (e.offsetY * (props.features.mouseWheelZoom.zoomIncrements - 1)) / props.scale.value.y\n            });\n            props.scale.update({\n                x: props.scale.value.x / props.features.mouseWheelZoom.zoomIncrements,\n                y: props.scale.value.y / props.features.mouseWheelZoom.zoomIncrements\n            });\n        } else {\n            if (props.scale.value.x > props.features.mouseWheelZoom.maxZoom) {\n                return;\n            }\n\n            props.scale.update({\n                x: props.scale.value.x * props.features.mouseWheelZoom.zoomIncrements,\n                y: props.scale.value.y * props.features.mouseWheelZoom.zoomIncrements\n            });\n            props.translate.update({\n                x: props.translate.value.x - (e.offsetX * (props.features.mouseWheelZoom.zoomIncrements - 1)) / props.scale.value.x,\n                y: props.translate.value.y - (e.offsetY * (props.features.mouseWheelZoom.zoomIncrements - 1)) / props.scale.value.y\n            });\n        }\n    });\n}\n", "import {\r\n    AurumElement,\r\n    Aurum,\r\n    DataSource,\r\n    ArrayDataSource,\r\n    DuplexDataSource,\r\n    aurumElementModelIdentitiy,\r\n    CancellationToken,\r\n    Renderable,\r\n    AurumComponentAPI,\r\n    EventEmitter,\r\n    dsUnique,\r\n    createLifeCycle,\r\n    ReadOnlyDataSource,\r\n    ClassType,\r\n    dsMap\r\n} from 'aurumjs';\r\nimport { ComponentModel, ComponentType } from './component_model.js';\r\nimport { RectangleComponentModel } from './drawables/aurum_rectangle.js';\r\nimport { TextComponentModel } from './drawables/aurum_text.js';\r\nimport { LineComponentModel } from './drawables/aurum_line.js';\r\nimport { ElipseComponentModel } from './drawables/aurum_elipse.js';\r\nimport { stateSymbol, StateComponentModel } from './drawables/state.js';\r\nimport { PathComponentModel } from './drawables/aurum_path.js';\r\nimport { QuadraticCurveComponentModel } from './drawables/aurum_quadratic_curve.js';\r\nimport { BezierCurveComponentModel } from './drawables/aurum_bezier_curve.js';\r\nimport { deref } from './utilities.js';\r\nimport {\r\n    renderPath,\r\n    renderRectangle,\r\n    renderText,\r\n    renderLine,\r\n    renderQuadraticCurve,\r\n    renderBezierCurve,\r\n    renderElipse,\r\n    renderRegularPolygon\r\n} from './rendering.js';\r\nimport { initializeKeyboardPanningFeature, initializeMousePanningFeature, initializeZoomFeature } from './features.js';\r\nimport { StyleType } from 'aurumjs/prebuilt/esnext/utilities/common.js';\r\n\r\nexport interface AurumnCanvasFeatures {\r\n    mouseWheelZoom?: {\r\n        zoomIncrements: number;\r\n        maxZoom: number;\r\n        minZoom: number;\r\n    };\r\n    panning?: {\r\n        // minX?: number;\r\n        // minY?: number;\r\n        // maxX?: number;\r\n        // maxY?: number;\r\n        mouse: boolean;\r\n        keyboard?: {\r\n            upKeyCode: number;\r\n            rightKeyCode: number;\r\n            leftKeyCode: number;\r\n            downKeyCode: number;\r\n            pixelsPerFrame: number;\r\n        };\r\n    };\r\n}\r\n\r\nconst renderCache = new WeakMap();\r\nexport interface AurumCanvasProps {\r\n    backgroundColor?: DataSource<string> | string;\r\n    onAttach?(canvas: HTMLCanvasElement): void;\r\n    onDetach?(): void;\r\n    class?: ClassType;\r\n    style?: StyleType;\r\n    width?: ReadOnlyDataSource<string | number> | ReadOnlyDataSource<string> | ReadOnlyDataSource<number> | string | number;\r\n    height?: ReadOnlyDataSource<string | number> | ReadOnlyDataSource<string> | ReadOnlyDataSource<number> | string | number;\r\n    translate?: DataSource<{ x: number; y: number }>;\r\n    scale?: DataSource<{ x: number; y: number }>;\r\n    features?: AurumnCanvasFeatures;\r\n}\r\n\r\nexport function AurumCanvas(props: AurumCanvasProps, children: Renderable[], api: AurumComponentAPI): AurumElement {\r\n    const lc = createLifeCycle();\r\n    api.synchronizeLifeCycle(lc);\r\n    const components = api.prerender(children, lc);\r\n    let pendingRerender;\r\n    const cancellationToken: CancellationToken = new CancellationToken();\r\n    let onMouseMove: EventEmitter<MouseEvent> = new EventEmitter();\r\n    let onMouseUp: EventEmitter<MouseEvent> = new EventEmitter();\r\n    let onMouseDown: EventEmitter<MouseEvent> = new EventEmitter();\r\n\r\n    return (\r\n        <canvas\r\n            onAttach={(canvas) => {\r\n                if (props.features) {\r\n                    if (!props.scale) {\r\n                        props.scale = new DataSource({ x: 1, y: 1 });\r\n                    }\r\n\r\n                    if (!props.translate) {\r\n                        props.translate = new DataSource({ x: 0, y: 0 });\r\n                    }\r\n\r\n                    if (props.features.mouseWheelZoom) {\r\n                        initializeZoomFeature(props, canvas);\r\n                    }\r\n                    if (props.features.panning?.mouse) {\r\n                        initializeMousePanningFeature(props, canvas);\r\n                    }\r\n                    if (props.features.panning?.keyboard) {\r\n                        initializeKeyboardPanningFeature(props, canvas);\r\n                    }\r\n                }\r\n\r\n                if (props.width instanceof DataSource) {\r\n                    props.width.listen(() => {\r\n                        invalidate(canvas);\r\n                    }, api.cancellationToken);\r\n                }\r\n\r\n                if (props.backgroundColor instanceof DataSource) {\r\n                    props.backgroundColor.listen(() => {\r\n                        invalidate(canvas);\r\n                    }, api.cancellationToken);\r\n                }\r\n\r\n                if (props.height instanceof DataSource) {\r\n                    props.height.listen(() => {\r\n                        invalidate(canvas);\r\n                    }, api.cancellationToken);\r\n                }\r\n\r\n                bindCanvas(canvas, components, cancellationToken);\r\n                render(canvas, components);\r\n                if (props.translate) {\r\n                    props.translate.transform(dsUnique(), api.cancellationToken).listen((v) => {\r\n                        invalidate(canvas);\r\n                    });\r\n                }\r\n                if (props.scale) {\r\n                    props.scale.transform(dsUnique(), api.cancellationToken).listen((v) => {\r\n                        invalidate(canvas);\r\n                    });\r\n                }\r\n                props.onAttach?.(canvas);\r\n            }}\r\n            onDetach={() => {\r\n                cancellationToken.cancel();\r\n                props.onDetach?.();\r\n            }}\r\n            style={props.style}\r\n            class={props.class}\r\n            width={\r\n                typeof props.width !== 'object'\r\n                    ? props.width?.toString()\r\n                    : (props.width.transform(dsMap<string | number, string>((v) => v.toString())) as DataSource<string>)\r\n            }\r\n            height={\r\n                typeof props.height !== 'object'\r\n                    ? props.height?.toString()\r\n                    : (props.height.transform(dsMap<string | number, string>((v) => v.toString())) as DataSource<string>)\r\n            }\r\n        ></canvas>\r\n    );\r\n\r\n    function bindCanvas(canvas: HTMLCanvasElement, components: ComponentModel[], cancellationToken: CancellationToken) {\r\n        cancellationToken.registerDomEvent(canvas, 'mouseleave', (e) => {\r\n            onMouseMove.fire(e as MouseEvent);\r\n        });\r\n        cancellationToken.registerDomEvent(canvas, 'mousemove', (e) => {\r\n            onMouseMove.fire(e as MouseEvent);\r\n        });\r\n        cancellationToken.registerDomEvent(canvas, 'mousedown', (e) => {\r\n            onMouseDown.fire(e as MouseEvent);\r\n        });\r\n        cancellationToken.registerDomEvent(canvas, 'mouseup', (e) => {\r\n            onMouseUp.fire(e as MouseEvent);\r\n        });\r\n\r\n        bind(canvas, components, undefined, cancellationToken);\r\n    }\r\n\r\n    function isOnTopOf(e: MouseEvent, target: ComponentModel, context: CanvasRenderingContext2D): boolean {\r\n        if (!target.renderedState) {\r\n            return false;\r\n        }\r\n        let x = e.offsetX - (props.translate?.value.x ? props.translate?.value.x * (props.scale?.value?.x ?? 1) : 0);\r\n        let y = e.offsetY - (props.translate?.value.y ? props.translate?.value.y * (props.scale?.value?.x ?? 1) : 0);\r\n        if (props.scale) {\r\n            x /= props.scale.value.x;\r\n            y /= props.scale.value.y;\r\n        }\r\n\r\n        if (target.type === ComponentType.TEXT) {\r\n            const label = target as TextComponentModel;\r\n            const size = deref(label.fontSize) ?? 16;\r\n            if (!label.textBaseline) {\r\n                y += size;\r\n            } else {\r\n                switch (label.textBaseline) {\r\n                    case 'bottom':\r\n                        y += size;\r\n                        break;\r\n                    case 'middle':\r\n                        y += size / 2;\r\n                        break;\r\n                    case 'alphabetic':\r\n                        y += size;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        switch (target.type) {\r\n            case ComponentType.IMAGE:\r\n            case ComponentType.RECTANGLE:\r\n            case ComponentType.TEXT:\r\n                return (\r\n                    x >= target.renderedState.x &&\r\n                    y >= target.renderedState.y &&\r\n                    x <= target.renderedState.x + target.renderedState.width * (props.scale?.value.x ?? 1) &&\r\n                    y <= target.renderedState.y + target.renderedState.height * (props.scale?.value.y ?? 1)\r\n                );\r\n            case ComponentType.ELIPSE:\r\n            case ComponentType.REGULAR_POLYGON:\r\n                if (!target.renderedState.path) {\r\n                    return false;\r\n                } else {\r\n                    return context.isPointInPath(target.renderedState.path, x, y);\r\n                }\r\n            default:\r\n                if (!target.renderedState.path) {\r\n                    return false;\r\n                } else {\r\n                    return context.isPointInPath(target.renderedState.path, x - target.renderedState.x, y - target.renderedState.y);\r\n                }\r\n        }\r\n    }\r\n\r\n    function bind(canvas: HTMLCanvasElement, children: ComponentModel[], parent: ComponentModel, cancellationToken: CancellationToken): void {\r\n        for (const child of children) {\r\n            if (child instanceof ArrayDataSource) {\r\n                child.listen(() => invalidate(canvas), cancellationToken);\r\n                const tokenMap = new Map<any, CancellationToken>();\r\n                child.listenAndRepeat((change) => {\r\n                    switch (change.operation) {\r\n                        case 'add':\r\n                            for (const item of change.items) {\r\n                                tokenMap.set(item, new CancellationToken());\r\n                                bindDynamicEntity(item, child, tokenMap.get(item));\r\n                            }\r\n                            break;\r\n                        case 'remove':\r\n                            for (const item of change.items) {\r\n                                tokenMap.get(item).cancel();\r\n                                tokenMap.delete(item);\r\n                            }\r\n                            break;\r\n\r\n                        case 'replace':\r\n                            tokenMap.get(change.target).cancel();\r\n                            tokenMap.delete(change.target);\r\n                            tokenMap.set(change.items[0], new CancellationToken());\r\n                            bindDynamicEntity(change.items[0], child, tokenMap.get(change.items[0]));\r\n                            break;\r\n                        case 'swap':\r\n                            break;\r\n                        case 'merge':\r\n                            throw new Error('Operation not supported');\r\n                    }\r\n                });\r\n                continue;\r\n            }\r\n\r\n            if (child instanceof DataSource || child instanceof DuplexDataSource) {\r\n                child.listen(() => invalidate(canvas), cancellationToken);\r\n                let bindToken: CancellationToken;\r\n                let value;\r\n                child.listenAndRepeat((newValue) => {\r\n                    if (value !== newValue) {\r\n                        value = newValue;\r\n                        if (bindToken) {\r\n                            bindToken.cancel();\r\n                        }\r\n                        bindToken = new CancellationToken();\r\n                        bindDynamicEntity(value, child, bindToken);\r\n                    }\r\n                });\r\n                continue;\r\n            }\r\n\r\n            if (child[stateSymbol]) {\r\n                if (!parent) {\r\n                    throw new Error('Cannot use <State> nodes at root level');\r\n                }\r\n                parent.animations.push(child as StateComponentModel);\r\n                continue;\r\n            }\r\n            if ('onMouseEnter' in child || 'onMouseLeave' in child) {\r\n                let isInside = false;\r\n                onMouseMove.subscribe((e) => {\r\n                    if (isOnTopOf(e, child, canvas.getContext('2d'))) {\r\n                        if (!isInside && child.onMouseEnter) {\r\n                            child.onMouseEnter(e, child);\r\n                        }\r\n                        isInside = true;\r\n                    } else {\r\n                        if (isInside && child.onMouseLeave) {\r\n                            child.onMouseLeave(e, child);\r\n                        }\r\n                        isInside = false;\r\n                    }\r\n                }, cancellationToken);\r\n            }\r\n\r\n            for (const key in child) {\r\n                if (key === 'onMouseUp') {\r\n                    onMouseUp.subscribe((e) => {\r\n                        if (isOnTopOf(e, child, canvas.getContext('2d'))) {\r\n                            child.onMouseUp(e, child);\r\n                        }\r\n                    }, cancellationToken);\r\n                    continue;\r\n                }\r\n\r\n                if (key === 'onMouseDown') {\r\n                    onMouseUp.subscribe((e) => {\r\n                        if (isOnTopOf(e, child, canvas.getContext('2d'))) {\r\n                            child.onMouseUp(e, child);\r\n                        }\r\n                    }, cancellationToken);\r\n                    continue;\r\n                }\r\n\r\n                if (key === 'onMouseClick') {\r\n                    onMouseUp.subscribe((e) => {\r\n                        if (isOnTopOf(e, child, canvas.getContext('2d'))) {\r\n                            child.onMouseClick(e, child);\r\n                        }\r\n                    }, cancellationToken);\r\n                    continue;\r\n                }\r\n\r\n                if (child[key] instanceof DataSource) {\r\n                    let value = child[key].value;\r\n                    let lastState;\r\n                    if (key === 'state') {\r\n                        const value = deref(child[key]);\r\n                        lastState = value;\r\n                        child.animationStates = child.animations.filter((e) => e.id === value);\r\n                        child.animationTime = Date.now();\r\n                    }\r\n\r\n                    child[key].listen((newValue) => {\r\n                        if (value !== newValue) {\r\n                            value = newValue;\r\n                            if (key === 'state') {\r\n                                if (lastState !== newValue) {\r\n                                    lastState = newValue;\r\n                                    child.animationStates = child.animations.filter((e) => e.id === newValue);\r\n                                    child.animationTime = Date.now();\r\n                                    invalidate(canvas);\r\n                                }\r\n                            } else {\r\n                                invalidate(canvas);\r\n                            }\r\n                        }\r\n                    }, cancellationToken);\r\n                }\r\n            }\r\n\r\n            bind(canvas, child.children, child, cancellationToken);\r\n        }\r\n\r\n        function bindDynamicEntity(value: any, parent: ComponentModel, bindToken: CancellationToken) {\r\n            const arrayedValue = Array.isArray(value) ? value : [value];\r\n            const lc = createLifeCycle();\r\n            const renderResult = [];\r\n            for (const piece of arrayedValue) {\r\n                if (!piece) {\r\n                    continue;\r\n                }\r\n\r\n                if (!renderCache.has(piece)) {\r\n                    renderCache.set(piece, api.prerender(piece, lc));\r\n                }\r\n                renderResult.push(renderCache.get(piece));\r\n            }\r\n\r\n            bind(canvas, renderResult, parent, bindToken);\r\n            lc.onAttach();\r\n            bindToken.addCancellable(() => lc.onDetach());\r\n            invalidate(canvas);\r\n        }\r\n    }\r\n\r\n    function invalidate(canvas: HTMLCanvasElement): void {\r\n        if (!pendingRerender) {\r\n            pendingRerender = requestAnimationFrame(() => {\r\n                pendingRerender = undefined;\r\n                if (canvas.isConnected) {\r\n                    render(canvas, components as any);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function render(canvas: HTMLCanvasElement, components: ComponentModel[]): void {\r\n        const context = canvas.getContext('2d');\r\n        if (props.backgroundColor === undefined) {\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n        } else {\r\n            context.fillStyle = deref(props.backgroundColor);\r\n            context.fillRect(0, 0, canvas.width, canvas.height);\r\n        }\r\n        applyContextTransformation(context);\r\n        for (const child of components) {\r\n            renderChild(context, child, 0, 0);\r\n        }\r\n        unapplyContextTransformation(context);\r\n    }\r\n\r\n    function unapplyContextTransformation(context: CanvasRenderingContext2D) {\r\n        if (props.scale || props.translate) {\r\n            context.restore();\r\n        }\r\n    }\r\n\r\n    function applyContextTransformation(context: CanvasRenderingContext2D) {\r\n        if (props.scale || props.translate) {\r\n            context.save();\r\n            if (props.scale?.value) {\r\n                context.scale(props.scale.value.x, props.scale.value.y);\r\n            }\r\n            if (props.translate?.value) {\r\n                context.translate(props.translate.value.x, props.translate.value.y);\r\n            }\r\n        }\r\n    }\r\n\r\n    function renderChild(context: CanvasRenderingContext2D, child: ComponentModel, offsetX: number, offsetY: number): void {\r\n        if (child === undefined || child === null) {\r\n            return;\r\n        }\r\n\r\n        if (Array.isArray(child)) {\r\n            for (const item of child) {\r\n                renderChild(context, item, offsetX, offsetY);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (child[stateSymbol]) {\r\n            return;\r\n        }\r\n\r\n        if (child[aurumElementModelIdentitiy]) {\r\n            if (!renderCache.has(child)) {\r\n                throw new Error('illegal state: unrendered aurum element made it into the canvas render phase');\r\n            }\r\n            child = renderCache.get(child);\r\n        }\r\n        if (child instanceof ArrayDataSource) {\r\n            for (const node of child.getData()) {\r\n                renderChild(context, node, offsetX, offsetY);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (child instanceof DataSource || child instanceof DuplexDataSource) {\r\n            renderChild(context, child.value, offsetX, offsetY);\r\n            return;\r\n        }\r\n\r\n        context.save();\r\n        let idle: boolean;\r\n        switch (child.type) {\r\n            case ComponentType.PATH:\r\n                idle = renderPath(context, child as PathComponentModel, offsetX, offsetY);\r\n                break;\r\n            case ComponentType.REGULAR_POLYGON:\r\n                idle = renderRegularPolygon(context, child as PathComponentModel, offsetX, offsetY);\r\n                break;\r\n            case ComponentType.RECTANGLE:\r\n                idle = renderRectangle(context, child as RectangleComponentModel, offsetX, offsetY);\r\n                break;\r\n            case ComponentType.TEXT:\r\n                idle = renderText(context, child as TextComponentModel, offsetX, offsetY);\r\n                break;\r\n            case ComponentType.LINE:\r\n                idle = renderLine(context, child as LineComponentModel, offsetX, offsetY);\r\n                break;\r\n            case ComponentType.QUADRATIC_CURVE:\r\n                idle = renderQuadraticCurve(context, child as QuadraticCurveComponentModel, offsetX, offsetY);\r\n                break;\r\n            case ComponentType.BEZIER_CURVE:\r\n                idle = renderBezierCurve(context, child as BezierCurveComponentModel, offsetX, offsetY);\r\n                break;\r\n            case ComponentType.ELIPSE:\r\n                idle = renderElipse(context, child as ElipseComponentModel, offsetX, offsetY);\r\n                break;\r\n            case ComponentType.GROUP:\r\n                idle = true;\r\n                break;\r\n        }\r\n        if (!idle) {\r\n            invalidate(context.canvas);\r\n        }\r\n\r\n        for (const subChild of child.children) {\r\n            renderChild(context, subChild, deref(child.x) + offsetX, deref(child.y) + offsetY);\r\n        }\r\n        context.restore();\r\n    }\r\n}\r\n", "import { AurumComponentAPI, createLifeCycle, ReadOnlyDataSource, Renderable } from 'aurumjs';\r\nimport { CommonProps } from '../common_props.js';\r\nimport { ComponentModel, ComponentType } from '../component_model.js';\r\n\r\nexport interface AurumRectangleProps extends CommonProps {\r\n    width: number | ReadOnlyDataSource<number>;\r\n    height: number | ReadOnlyDataSource<number>;\r\n}\r\n\r\nexport interface RectangleComponentModel extends ComponentModel {\r\n    strokeColor?: string | ReadOnlyDataSource<string> | CanvasGradient | ReadOnlyDataSource<CanvasGradient>;\r\n    fillColor?: string | ReadOnlyDataSource<string> | CanvasGradient | ReadOnlyDataSource<CanvasGradient>;\r\n    opacity?: number | ReadOnlyDataSource<number>;\r\n    width: number | ReadOnlyDataSource<number>;\r\n    height: number | ReadOnlyDataSource<number>;\r\n}\r\n\r\nexport function AurumRectangle(props: AurumRectangleProps, children: Renderable[], api: AurumComponentAPI): RectangleComponentModel {\r\n    const lc = createLifeCycle();\r\n    api.synchronizeLifeCycle(lc);\r\n    if (props.onAttach) {\r\n        api.onAttach(() => props.onAttach());\r\n    }\r\n    if (props.onDetach) {\r\n        api.onDetach(() => props.onDetach());\r\n    }\r\n\r\n    const components = api.prerender(children, lc).filter((c) => !!c);\r\n    return {\r\n        ...props,\r\n        opacity: props.opacity ?? 1,\r\n        renderedState: undefined,\r\n        children: components as any,\r\n        animations: [],\r\n        type: ComponentType.RECTANGLE\r\n    };\r\n}\r\n", "import { AurumComponentAPI, createLifeCycle, DataSource, dsUnique, ReadOnlyDataSource, Renderable } from 'aurumjs';\r\nimport { CommonProps } from '../common_props.js';\r\nimport { ComponentModel, ComponentType } from '../component_model.js';\r\n\r\nexport interface AurumTexteProps extends CommonProps {\r\n    font?: string | ReadOnlyDataSource<string>;\r\n    fontSize?: number | ReadOnlyDataSource<number>;\r\n    fontWeight?: string | ReadOnlyDataSource<string>;\r\n    width?: number | ReadOnlyDataSource<number>;\r\n    wrapWidth?: number | ReadOnlyDataSource<number>;\r\n    textBaseline?: string | ReadOnlyDataSource<string>;\r\n    lineHeight?: number | ReadOnlyDataSource<number>;\r\n}\r\n\r\nexport interface TextComponentModel extends ComponentModel {\r\n    text: string | ReadOnlyDataSource<string>;\r\n    font?: string | ReadOnlyDataSource<string>;\r\n    textBaseline?: string | ReadOnlyDataSource<string>;\r\n    fontSize?: number | ReadOnlyDataSource<number>;\r\n    strokeColor?: string | ReadOnlyDataSource<string> | CanvasGradient | ReadOnlyDataSource<CanvasGradient>;\r\n    fontWeight?: string | ReadOnlyDataSource<string>;\r\n    fillColor?: string | ReadOnlyDataSource<string> | CanvasGradient | ReadOnlyDataSource<CanvasGradient>;\r\n    opacity?: number | ReadOnlyDataSource<number>;\r\n    wrapWidth?: number | ReadOnlyDataSource<number>;\r\n    lineHeight?: number | ReadOnlyDataSource<number>;\r\n}\r\n\r\nexport function AurumText(props: AurumTexteProps, children: Renderable[], api: AurumComponentAPI): TextComponentModel {\r\n    const lc = createLifeCycle();\r\n    api.synchronizeLifeCycle(lc);\r\n    if (props.onAttach) {\r\n        api.onAttach(() => props.onAttach());\r\n    }\r\n    if (props.onDetach) {\r\n        api.onDetach(() => props.onDetach());\r\n    }\r\n\r\n    const content = api.prerender(children, lc).filter((c) => !!c);\r\n    const text = new DataSource('');\r\n\r\n    if (props.font instanceof DataSource) {\r\n        props.font.listen(() => {\r\n            if (result.renderedState) {\r\n                result.renderedState.lines = [];\r\n            }\r\n        }, api.cancellationToken);\r\n    }\r\n\r\n    if (props.fontWeight instanceof DataSource) {\r\n        props.fontWeight.listen(() => {\r\n            if (result.renderedState) {\r\n                result.renderedState.lines = [];\r\n            }\r\n        }, api.cancellationToken);\r\n    }\r\n\r\n    if (props.fontSize instanceof DataSource) {\r\n        props.fontSize.listen(() => {\r\n            if (result.renderedState) {\r\n                result.renderedState.lines = [];\r\n            }\r\n        }, api.cancellationToken);\r\n    }\r\n\r\n    if (props.width instanceof DataSource) {\r\n        props.width.listen(() => {\r\n            if (result.renderedState) {\r\n                result.renderedState.lines = [];\r\n            }\r\n        }, api.cancellationToken);\r\n    }\r\n\r\n    if (props.wrapWidth instanceof DataSource) {\r\n        props.wrapWidth.listen(() => {\r\n            if (result.renderedState) {\r\n                result.renderedState.lines = [];\r\n            }\r\n        }, api.cancellationToken);\r\n    }\r\n\r\n    for (const i of content as Array<string | ReadOnlyDataSource<string>>) {\r\n        if (i instanceof DataSource) {\r\n            i.transform(dsUnique(), api.cancellationToken).listen((v) => {\r\n                if (result.renderedState) {\r\n                    result.renderedState.lines = [];\r\n                }\r\n                updateText(text, content as any);\r\n            });\r\n        }\r\n    }\r\n    updateText(text, content as any);\r\n\r\n    const result = {\r\n        ...props,\r\n        opacity: props.opacity ?? 1,\r\n        renderedState: undefined,\r\n        text,\r\n        children: [],\r\n        animations: [],\r\n        type: ComponentType.TEXT\r\n    };\r\n    return result;\r\n}\r\n\r\nfunction updateText(text: DataSource<string>, content: Array<string | ReadOnlyDataSource<string>>) {\r\n    text.update(\r\n        content.reduce<string>((p, c) => {\r\n            if (typeof c === 'string') {\r\n                return `${p}${c}`;\r\n            } else {\r\n                if (c.value) {\r\n                    return `${p}${c.value}`;\r\n                } else {\r\n                    return p;\r\n                }\r\n            }\r\n        }, '')\r\n    );\r\n}\r\n", "import { AurumComponentAPI, createLifeCycle, ReadOnlyDataSource, Renderable } from 'aurumjs';\r\nimport { CommonProps } from '../common_props.js';\r\nimport { ComponentModel, ComponentType } from '../component_model.js';\r\n\r\nexport interface AurumLineProps extends CommonProps {\r\n    tx: number | ReadOnlyDataSource<number>;\r\n    ty: number | ReadOnlyDataSource<number>;\r\n    lineWidth?: number | ReadOnlyDataSource<number>;\r\n}\r\n\r\nexport interface LineComponentModel extends ComponentModel {\r\n    strokeColor?: string | ReadOnlyDataSource<string> | CanvasGradient | ReadOnlyDataSource<CanvasGradient>;\r\n    fillColor?: string | ReadOnlyDataSource<string> | CanvasGradient | ReadOnlyDataSource<CanvasGradient>;\r\n    opacity?: number | ReadOnlyDataSource<number>;\r\n    tx: number | ReadOnlyDataSource<number>;\r\n    ty: number | ReadOnlyDataSource<number>;\r\n    lineWidth?: number | ReadOnlyDataSource<number>;\r\n}\r\n\r\nexport function AurumLine(props: AurumLineProps, children: Renderable[], api: AurumComponentAPI): LineComponentModel {\r\n    const lc = createLifeCycle();\r\n    api.synchronizeLifeCycle(lc);\r\n    if (props.onAttach) {\r\n        api.onAttach(() => props.onAttach());\r\n    }\r\n    if (props.onDetach) {\r\n        api.onDetach(() => props.onDetach());\r\n    }\r\n\r\n    const components = api.prerender(children, lc).filter((c) => !!c);\r\n    return {\r\n        ...props,\r\n        opacity: props.opacity ?? 1,\r\n        lineWidth: props.lineWidth ?? 1,\r\n        renderedState: undefined,\r\n        children: components as any,\r\n        animations: [],\r\n        type: ComponentType.LINE\r\n    };\r\n}\r\n", "import { AurumComponentAPI, createLifeCycle, ReadOnlyDataSource, Renderable } from 'aurumjs';\r\nimport { CommonProps } from '../common_props.js';\r\nimport { ComponentModel, ComponentType } from '../component_model.js';\r\n\r\nexport interface AurumElipseProps extends CommonProps {\r\n    rx: number | ReadOnlyDataSource<number>;\r\n    ry: number | ReadOnlyDataSource<number>;\r\n    startAngle?: number | ReadOnlyDataSource<number>;\r\n    endAngle?: number | ReadOnlyDataSource<number>;\r\n}\r\n\r\nexport interface ElipseComponentModel extends ComponentModel {\r\n    strokeColor?: string | ReadOnlyDataSource<string> | CanvasGradient | ReadOnlyDataSource<CanvasGradient>;\r\n    fillColor?: string | ReadOnlyDataSource<string> | CanvasGradient | ReadOnlyDataSource<CanvasGradient>;\r\n    opacity?: number | ReadOnlyDataSource<number>;\r\n    rx: number | ReadOnlyDataSource<number>;\r\n    ry: number | ReadOnlyDataSource<number>;\r\n    rotation?: number | ReadOnlyDataSource<number>;\r\n    startAngle?: number | ReadOnlyDataSource<number>;\r\n    endAngle?: number | ReadOnlyDataSource<number>;\r\n}\r\n\r\nexport function AurumElipse(props: AurumElipseProps, children: Renderable[], api: AurumComponentAPI): ElipseComponentModel {\r\n    const lc = createLifeCycle();\r\n    api.synchronizeLifeCycle(lc);\r\n    if (props.onAttach) {\r\n        api.onAttach(() => props.onAttach());\r\n    }\r\n    if (props.onDetach) {\r\n        api.onDetach(() => props.onDetach());\r\n    }\r\n\r\n    const components = api.prerender(children, lc).filter((c) => !!c);\r\n    return {\r\n        ...props,\r\n        opacity: props.opacity ?? 1,\r\n        renderedState: undefined,\r\n        children: components as any,\r\n        animations: [],\r\n        type: ComponentType.ELIPSE\r\n    };\r\n}\r\n", "import { DataSource, AurumComponentAPI, Renderable, createLifeCycle } from 'aurumjs';\r\nimport { ComponentModel, ComponentType } from '../component_model.js';\r\nimport { InteractionProps } from '../common_props.js';\r\n\r\nexport interface AurumGroupProps extends InteractionProps {\r\n    state?: string | DataSource<string>;\r\n    x?: number | DataSource<number>;\r\n    y?: number | DataSource<number>;\r\n    onAttach?(): void;\r\n    onDetach?(): void;\r\n}\r\n\r\nexport interface GroupComponentModel extends ComponentModel {}\r\n\r\nexport function AurumGroup(props: AurumGroupProps, children: Renderable[], api: AurumComponentAPI): GroupComponentModel {\r\n    const lc = createLifeCycle();\r\n    api.synchronizeLifeCycle(lc);\r\n    if (props.onAttach) {\r\n        api.onAttach(() => props.onAttach());\r\n    }\r\n    if (props.onDetach) {\r\n        api.onDetach(() => props.onDetach());\r\n    }\r\n\r\n    props.x ??= 0;\r\n    props.y ??= 0;\r\n\r\n    const components = api.prerender(children, lc).filter((c) => !!c);\r\n    return {\r\n        ...(props as Required<AurumGroupProps>),\r\n        renderedState: undefined,\r\n        children: components as any,\r\n        animations: [],\r\n        type: ComponentType.GROUP\r\n    };\r\n}\r\n", "import { ReadOnlyDataSource, Renderable, AurumComponentAPI, createLifeCycle } from 'aurumjs';\r\nimport { ComponentModel, ComponentType } from '../component_model.js';\r\nimport { CommonProps } from '../common_props.js';\r\n\r\nexport interface AurumPathProps extends CommonProps {\r\n    path: string | ReadOnlyDataSource<string>;\r\n    lineWidth?: number | ReadOnlyDataSource<number>;\r\n}\r\n\r\nexport interface PathComponentModel extends ComponentModel {\r\n    strokeColor?: string | ReadOnlyDataSource<string> | CanvasGradient | ReadOnlyDataSource<CanvasGradient>;\r\n    fillColor?: string | ReadOnlyDataSource<string> | CanvasGradient | ReadOnlyDataSource<CanvasGradient>;\r\n    opacity?: number | ReadOnlyDataSource<number>;\r\n    path?: string | ReadOnlyDataSource<string>;\r\n    lineWidth?: number | ReadOnlyDataSource<number>;\r\n}\r\n\r\nexport function AurumPath(props: AurumPathProps, children: Renderable[], api: AurumComponentAPI): PathComponentModel {\r\n    const lc = createLifeCycle();\r\n    api.synchronizeLifeCycle(lc);\r\n    if (props.onAttach) {\r\n        api.onAttach(() => props.onAttach());\r\n    }\r\n    if (props.onDetach) {\r\n        api.onDetach(() => props.onDetach());\r\n    }\r\n\r\n    const components = api.prerender(children, lc).filter((c) => !!c);\r\n    return {\r\n        ...props,\r\n        opacity: props.opacity ?? 1,\r\n        renderedState: undefined,\r\n        children: components as any,\r\n        animations: [],\r\n        type: ComponentType.PATH\r\n    };\r\n}\r\n", "import { AurumComponentAPI, createLifeCycle, ReadOnlyDataSource, Renderable } from 'aurumjs';\nimport { CommonProps } from '../common_props.js';\nimport { ComponentModel, ComponentType } from '../component_model.js';\n\nexport interface AurumImageProps extends Omit<CommonProps, 'strokeColor' | 'fillColor'> {\n    width?: number | ReadOnlyDataSource<number>;\n    height?: number | ReadOnlyDataSource<number>;\n    src: string | ReadOnlyDataSource<string>;\n}\n\nexport interface ImageComponentModel extends ComponentModel {\n    opacity?: number | ReadOnlyDataSource<number>;\n    width?: number | ReadOnlyDataSource<number>;\n    height?: number | ReadOnlyDataSource<number>;\n    src: string | ReadOnlyDataSource<string>;\n}\n\nexport function AurumImage(props: AurumImageProps, children: Renderable[], api: AurumComponentAPI): ImageComponentModel {\n    const lc = createLifeCycle();\n    api.synchronizeLifeCycle(lc);\n    if (props.onAttach) {\n        api.onAttach(() => props.onAttach());\n    }\n    if (props.onDetach) {\n        api.onDetach(() => props.onDetach());\n    }\n\n    const components = api.prerender(children, lc).filter((c) => !!c);\n    return {\n        ...props,\n        opacity: props.opacity ?? 1,\n        renderedState: undefined,\n        children: components as any,\n        animations: [],\n        type: ComponentType.IMAGE\n    };\n}\n", "import { ReadOnlyDataSource, Renderable, AurumComponentAPI, createLifeCycle } from 'aurumjs';\nimport { ComponentModel, ComponentType } from '../component_model.js';\nimport { CommonProps } from '../common_props.js';\n\nexport interface AurumRegularPolygonProps extends CommonProps {\n    sides: number | ReadOnlyDataSource<number>;\n    radius: number | ReadOnlyDataSource<number>;\n}\n\nexport interface RegularPolygonComponentModel extends ComponentModel {\n    strokeColor?: string | ReadOnlyDataSource<string> | CanvasGradient | ReadOnlyDataSource<CanvasGradient>;\n    fillColor?: string | ReadOnlyDataSource<string> | CanvasGradient | ReadOnlyDataSource<CanvasGradient>;\n    opacity?: number | ReadOnlyDataSource<number>;\n    sides?: number | ReadOnlyDataSource<number>;\n    radius?: number | ReadOnlyDataSource<number>;\n}\n\nexport function AurumRegularPolygon(props: AurumRegularPolygonProps, children: Renderable[], api: AurumComponentAPI): RegularPolygonComponentModel {\n    const lc = createLifeCycle();\n    api.synchronizeLifeCycle(lc);\n    if (props.onAttach) {\n        api.onAttach(() => props.onAttach());\n    }\n    if (props.onDetach) {\n        api.onDetach(() => props.onDetach());\n    }\n\n    const components = api.prerender(children, lc).filter((c) => !!c);\n    return {\n        ...props,\n        opacity: props.opacity ?? 1,\n        renderedState: undefined,\n        children: components as any,\n        animations: [],\n        type: ComponentType.REGULAR_POLYGON\n    };\n}\n"],
  "mappings": "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",
  "names": ["ComponentType", "_a", "_b", "components", "cancellationToken", "children", "value", "parent", "lc"]
}
